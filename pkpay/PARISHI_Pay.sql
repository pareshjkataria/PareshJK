--25/05/2017...
--PARESH KATARIA...
--SCRIPT OF PAYROLL (PARISHI DIAMOND)
--

--PARISHI DIAMOND - SURAT = FACTORY AND MUMBAI = SHOP

CREATE TABLESPACE PAY DATAFILE 'D:\ORACLE\ORADATA\ORCL\PAY.DAT' SIZE 500M AUTOEXTEND ON NEXT 50M  MAXSIZE UNLIMITED;

CREATE USER PAY IDENTIFIED BY PAY DEFAULT TABLESPACE PAY TEMPORARY TABLESPACE TEMP PROFILE DEFAULT;
GRANT CREATE SESSION TO PAY; 
GRANT DBA TO PAY;

--EMPMAS
E - EMPLOYEE (ON ROLL EMP)
P - PROBATION
T - TRAINEE AND TRIAL
V - VISITOR
R - PARTNER
M - MACHINE (= CHIRAG)


-----
USE THIS TABLE FROM PDMFG_VER3 USER 

COMPMAS
FYMAS
DEPTMAS 
FLOORMAS
DESGMAS
USERMAS ?

 
---- 03/06/2017
-- ADD SHIFTMASTER FORM LIKE NAITIK BHAI SOFTWARE. USE EXISTING TABLE STRUCTURE FOR IT

---- 23/06/2017
-- UPDATE TABLE COMPMAS IN PDMFG_VER3
ALTER TABLE COMPMAS ADD
(
CITY		 	VARCHAR2(20),
ESICNO	   	 	VARCHAR2(30),
PHONENO2     	VARCHAR2(30),
TDSNO2       	VARCHAR2(80),
TDSNO3       	VARCHAR2(80),
TDSNO4       	VARCHAR2(80),
PANNO        	VARCHAR2(20),
TANNO        	VARCHAR2(20),
ESICCODENO   	VARCHAR2(30),
ESICBRANCH   	VARCHAR2(30),
PFACNO       	VARCHAR2(20)
);  


---- 24/06/2017
-- UPDATE TABLE EMPMAS IN PDMFG_VER3
ALTER TABLE EMPMAS ADD
(
QUALIFICATION     VARCHAR2(20),
NOTARYDATE       DATE,
/* ADD2             VARCHAR2(40),
ADD3             VARCHAR2(40),*/
CITY             VARCHAR2(40),
/*PADD2            VARCHAR2(40),
PADD3            VARCHAR2(40),*/
PCITY            VARCHAR2(40),
PF_FLAG          VARCHAR2(1),
ESIC_FLAG        VARCHAR2(1),
MARITAL_STATUS   VARCHAR2(10),
NO_OF_CHILD       NUMBER(5),  
PHY_DISABILITY   VARCHAR2(1),      
BANKNM           VARCHAR2(50),
BANK_BRANCH      VARCHAR2(20),
AADHARNO         VARCHAR2(20),
PANNO              VARCHAR2(20),
PFNO             VARCHAR2(20),
ESICNO           VARCHAR2(20),      
BASIC             NUMBER(8),  
DA               NUMBER(8),    
HRA               NUMBER(8),    
EA               NUMBER(8),    
TA               NUMBER(8),
MEDIREMB         NUMBER(8),
TOTSAL           NUMBER(8),
INCENTIVE        NUMBER(8)
);


-- ADD TABEL IN PDMFG_VER3
--DROP TABLE EMP_FAMILYDET;
CREATE TABLE EMP_FAMILYDET
(
COMPCD    		NUMBER(5),
EMPCD     		VARCHAR2(6),
SRNO      		NUMBER(5),
MEMBERNM  		VARCHAR2(50),
RELATION  		VARCHAR2(15),
BIRTHDATE 		DATE,
AGE				NUMBER(3),
STUDY			VARCHAR2(1),	--VALUES Y/N -  (IN CASE OF SON AND DAUGHTER)
AADHARNO		VARCHAR2(20),
NOMINEE   		VARCHAR2(1),	--Y/N
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
CONSTRAINT PK_EMP_FAMILY_COMPSRNO 	PRIMARY KEY (COMPCD, EMPCD, SRNO),
CONSTRAINT FK_EMP_FAMILY_COMPEMPCD 	FOREIGN KEY (COMPCD, EMPCD)  REFERENCES PDMFG_VER3.EMPMAS (COMPCD, EMPCD),
CONSTRAINT NN_EMP_FAMILY_BIRTHDATE  CHECK (BIRTHDATE IS NOT NULL),
CONSTRAINT NN_EMP_FAMILY_MEMBERNM  	CHECK (MEMBERNM IS NOT NULL),
CONSTRAINT NN_EMP_FAMILY_RELATION  	CHECK (RELATION IS NOT NULL),
CONSTRAINT NN_EMP_FAMILY_AGE		CHECK (AGE IS NOT NULL),
CONSTRAINT CK_EMP_FAMILY_NOMINEE	CHECK (NOMINEE IN ('Y','N')),
CONSTRAINT CK_EMP_FAMILY_STUDY		CHECK (STUDY IN ('Y','N')),
CONSTRAINT NN_EMP_FAMILY_EUSER 		CHECK (EUSER IS NOT NULL)
);
  
  
--DROP TABLE HIS_EMP_FAMILYDET;
CREATE TABLE HIS_EMP_FAMILYDET
(
COMPCD    		NUMBER(5),
EMPCD     		VARCHAR2(6),
SRNO      		NUMBER(5),
MEMBERNM  		VARCHAR2(50),
RELATION  		VARCHAR2(15),
BIRTHDATE 		DATE,
AGE				NUMBER(3),
STUDY			VARCHAR2(1),	--VALUES Y/N -  (IN CASE OF SON AND DAUGHTER)
NOMINEE   		VARCHAR2(1),	--Y/N
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20), 	
DML_IP	    	VARCHAR2(30)
);
  

---- 13/07/2017
- EMP MASTER MA JE USER NE SYSTEM USER NA RIGHTS HASE TE USER NE CASH SAL COLUMN NA RIGHTS HASE.
  CASHSAL COLUMN MA VALUE/100 FORMAT MA VALUE ADD KARVANI RESE
  
---- 14/07/2017
-- ADD COLUMN IN TABLES
ALTER TABLE SHIFTS ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);

ALTER TABLE SHIFTS_LOG ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);

ALTER TABLE SHIFTBYDESG ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);

ALTER TABLE SHIFTBYDESG_LOG ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);

ALTER TABLE SHIFTBYdept ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);

ALTER TABLE SHIFTBYDEPT_LOG ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);

ALTER TABLE SHIFTBYEMP_LOG ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);

ALTER TABLE SHIFTBYEMP ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);

ALTER TABLE REASONS ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);

ALTER TABLE LATEOVERTIMECONFIGS ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);

ALTER TABLE LATEOVERTIMECONFIGS_LOG ADD
(
EUSER VARCHAR2(20),
CUSER VARCHAR2(20)
);
  
  
  
--ADD NEW TABLE IN ATTEN DATABASE


--DROP TABLE FIRMTYPEMAS;
CREATE TABLE FIRMTYPEMAS 
(
FIRMCD			NUMBER(5),
FIRMTYPE		VARCHAR2(100),
SHORTNM			VARCHAR2(10),	--SHOP/FACTORY
FIRMSTATE		VARCHAR2(30),	--GUJARAT/MAHARASHTRA
EUSER			VARCHAR2(20),	--
EDATE			DATE,			--DATE + TIME
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
CONSTRAINT PK_FIRMMAS_FIRMCD PRIMARY KEY (FIRMCD),
CONSTRAINT UQ_FIRMMAS_FIRMTYPE UNIQUE (FIRMTYPE),
CONSTRAINT NN_FIRMMAS_SHORTNM	CHECK (SHORTNM IS NOT NULL),
CONSTRAINT CK_FORMMAS_SHORT CHECK (SHORTNM IN ('SHOP','FACTORY')),
CONSTRAINT NN_FIRMMAS_FIRMTYPE CHECK (FIRMTYPE IS NOT NULL),
CONSTRAINT NN_FIRMMAS_FIRMSTATE CHECK (FIRMSTATE IS NOT NULL),
CONSTRAINT NN_FIRMMAS_EUSER CHECK (EUSER IS NOT NULL)
);


--DROP TABLE HIS_FIRMTYPEMAS;
CREATE TABLE HIS_FIRMTYPEMAS 
(
FIRMCD			NUMBER(5),
FIRMTYPE		VARCHAR2(100),
SHORTNM			VARCHAR2(10),	--SHOP/FACTORY
FIRMSTATE		VARCHAR2(30),	--GUJARAT/MAHARASHTRA
EUSER			VARCHAR2(20),	--
EDATE			DATE,			--DATE + TIME
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),	--UPDATE/DELETE USER
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20), 	
DML_IP	    	VARCHAR2(30)
);

--COPY TRIGGER FIRST
--DROP TABLE SALTRAN;
CREATE TABLE SALTRAN 
(
COMPCD			NUMBER(5),
DEPTCD			NUMBER(5),
EMPCD			VARCHAR2(6),		
SALTYPE        	VARCHAR2(1),  	-- 'S' FOR SALARY, 'B' FOR BONUS , 'L' FOR LEAVE
SALMONTH       	VARCHAR2(6),  	-- 201707,201706
PAYDATE        	DATE,      	-- PAYMENT DATE OF BANK (CHEQUE DATE)  
WD             	NUMBER(5),     -- WORKING DAYS - (EX - 26)
PD             	NUMBER(7,2),   -- PRESENT DAYS (WD KARTA ATTEN_PD VADHI JAY TO PD = WD THAI JAY)
ATTEN_PD		NUMBER(7,2), 	-- ORIGINAL PRESENT DAYS FROM ATTEN (TOTAL PRESENT DAYS USING PUCHING SYSTEM)
TD             	NUMBER(5),    	-- TOTAL DAYS OF MONTH  (EX AUG - 31)
REALSAL		 	NUMBER(10,2), 	-- ACTUAL SALARY (CASHSAL + CHQSAL) - 57000 (EX OF PK)
CASHSAL		 	NUMBER(10,2),	-- CASH SALARY (40000)
CHQSAL		 	NUMBER(10,2), 	-- CHEQUE SALARY (17000)
PERDAYSAL		NUMBER(10,2) ,  -- CHEQUE SAL/WD
IMPORTSAL		NUMBER(10,2),	-- VARIABLE SALARY
--BIFERCUATION OF CHQSAL 
BASIC          	NUMBER(10,2), 	-- ACTUAL BASIC
DA             	NUMBER(10,2), 	-- ACTUAL DA
HRA            	NUMBER(10,2), 	-- ACTUAL HRA
EA			 	NUMBER(10,2), 	-- ACTUAL EDUCATION ALLOWANCE
TA             	NUMBER(10,2), 	-- ACTUAL TA
MEDIREMB		NUMBER(10,2),	-- MEDICAL REIMBURSEMENT
BASICS         	NUMBER(10,2), 	-- BASIC + DA
ALLOWANCES	 	NUMBER(10,2),   -- HRA + EA + TA + MEDIREMB
--EARNING COLUMNS  
EBASIC         	NUMBER(10,2), 	
EDA            	NUMBER(10,2),
EHRA           	NUMBER(10,2),
EEA			 	NUMBER(10,2),
ETA            	NUMBER(10,2),  
EMEDIREMB		NUMBER(10,2),	-- 
EBASICS		 	NUMBER(10,2),	-- EBASIC + EDA
EALLOWANCES	 	NUMBER(10,2),   -- EHRA + EEA + ETA + EMEDIREMB
ECASHSAL	    NUMBER(10,2),	-- EARNINGS OF CASH SAL 
ECHQSAL		 	NUMBER(10,2),	-- TOTAL OF EARNINGS COLUMN ( EBASIC + EDA + EHRA + EEA + ETA + EMEDIREMB)
PFGROSS        	NUMBER(10,2),   -- GROSS ELIGIBLE SALARY FOR PF (18000) 
ESICGROSS      	NUMBER(10,2),   -- GROSS SALARY FOR ESIC
COMPEPF_PER    	NUMBER(6,2),	--
COMPEPS_PER    	NUMBER(6,2),	-- PENSION SCHEME
COMPPF_PER     	NUMBER(6,2),	-- (COMPEPF_PER + COMPFPF_PER)
COMP_EPF       	NUMBER(10,2),	-- AMT COLUMNS
COMP_EPS       	NUMBER(10,2),
COMP_PF        	NUMBER(10,2),	-- (COMPEPF + COMPFPF)
COMPESIC_PER	NUMBER(10,2),
COMPESIC		NUMBER(10,2),
EMPPF_PER      	NUMBER(6,2),    -- (EMPEPF_PER + EMPFPF_PER)
EMPPF          	NUMBER(10,2), 	-- (EMPEPF + EMPFPF)  -- 780 ON 12000 (-)
EMPESIC_PER    	NUMBER(6,2),    -- %
EMPESIC        	NUMBER(10,2),   -- AMT (-)
PT             	NUMBER(10,2),   -- PROFESSIONAL TAX (-)
EMPLWF			NUMBER(5),
COMPLWF	     	NUMBER(5),
TOTDEDUCT	 	NUMBER(10,2), 	-- TOTAL OF DEDUCTION  (PF + ESIC + PT + EWF)
--ADVANCE,PENALTY AND INCENTIVE  CASH SALARY PAR JA CALCUALTION THASE (NE CUT THASE)
ADVANCE        	NUMBER(10,2),   -- UPAD (-) - NO NEED OF NOW
LOANEMI			NUMBER(10,2),
INCENTIVE	    NUMBER(10,2),   -- (+) (ONLY IN CASH)  -- NO NEED FOR NOW JUST COLUMN ADDED
OTHER_INCENTIVE	NUMBER(10,2),	-- (+) VALUE COME FROM OTHER PENALTY ENTRY MODULE (BUT FROM FAULT CATCH EMP )
OTMIN			NUMBER(10),
OTPER			NUMBER(7,2),	-- ADD IN CASH SALARY
OTAMT	 		NUMBER(10,2),	-- O
PENALTY		 	NUMBER(10,2),   -- (-)
OTHER_PENALTY	NUMBER(10,2),	-- (-)	VALUE COME FROM OTHER PENALTY ENTRY MODULE
NETCHQSAL	   	NUMBER(10,2), 	-- PLUS MINUS THAINE NET SALARY  (CHQ SALARY)  ( ECHQSAL - TOTDEDUCT)
NETCASHSAL    	NUMBER(10,2), 	-- CASH APAY TE SALARY ( (ECASHSAL + INCENTIVE + OTHER_INCENTIVE) - (ADVANCE + PENALTY + OTHER_PENALTY + LOAN_EMI) )
NETPAY		 	NUMBER(10,2), 	-- NETCHQSAL + NETCASHSAL
ACNO         	VARCHAR2(20),	-- EMPLOYEE BANK ACNO
BANKNM         	VARCHAR2(20),
PAYMODE        	VARCHAR2(40),  -- CASH/CHEQUE
--LOANID		 	NUMBER(5),
TDS         	NUMBER(10,2),
SURCHARGE      	NUMBER(10,2),
CESS           	NUMBER(10,2),
TOTTDS         	NUMBER(10,2),	--TOTAL OF TDS + SURCHARGE + CESS 
EMP_TYPE		VARCHAR2(1),
EUSER          	VARCHAR2(30),
ETERMINAL		VARCHAR2(20),
EDATE			DATE,
EIP				VARCHAR2(20),
CUSER          	VARCHAR2(30),
CONSTRAINT PK_SALTRAN_COEMPCD PRIMARY KEY (COMPCD, EMPCD, SALTYPE, SALMONTH),
CONSTRAINT FK_SALTRAN_COEMPCD FOREIGN KEY (COMPCD, EMPCD)  REFERENCES PDMFG_VER3.EMPMAS (COMPCD, EMPCD),
CONSTRAINT NN_SALTRAN_EMPCD		CHECK (EMPCD IS NOT NULL),
CONSTRAINT NN_SALTRAN_SALMONTH	CHECK (SALMONTH IS NOT NULL),
CONSTRAINT NN_SALTRAN_SALTYPE	CHECK (SALTYPE IS NOT NULL),
CONSTRAINT NN_SALTRAN_PAYDATE	CHECK (PAYDATE IS NOT NULL),
CONSTRAINT NN_SALTRAN_TD		CHECK (TD IS NOT NULL),
CONSTRAINT NN_SALTRAN_PD		CHECK (PD IS NOT NULL),
CONSTRAINT NN_SALTRAN_WD		CHECK (WD IS NOT NULL),
CONSTRAINT NN_SALTRAN_EMP_TYPE	CHECK (EMP_TYPE IS NOT NULL),
CONSTRAINT NN_SALTRAN_EUSER		CHECK (EUSER IS NOT NULL)
); 

--27/11/2017 - SCRIPT IS UPTO DATE - OTHER_INCENTIVE COLUMN ADDED
--01/12/2017 - UPDATE - DEPTCD ADDED
--09/12/2017 - UPDATE - EMP_TYPE COLUMN ADDED
  

  
  
--- 30/08/2017 -- POINT DISCUSS WITH SIR/ PARESHBHAI/ UMANGBHAI/ PARAGBHAI
1) VARIABLE SALARY MA EMP. NI SALARY ENI FIX KARELI SALARY KARTA OCHI HOY TO BIJI SALARY CASH MA MINUS DISPLAY KARVI
   (EX  EMP SALARY 40000 -- EAR SALARY - 30000 THEN 10000 MINUS IN CASH SALARY)
2) MANUAL ATTENDANCE MA FROM TO DATE ADD KARVANI. (EMPLOYEE 2-3 DAYS MATE OFFICE WOTK THI BAHAR JAY TYARE PR KARVA. EMP. E TENI INFORMATION PELA APVI PADSE)   
3) PREVIOUS MONTH NA DATA MAINTAIN KARVA MONTH WISE (UPAD LIDHO HOY TO TENA KETLA PAY KARVANA BAKI CHE TE) -- FUTURE
4) LOAN AMOUNT COLUMN ADD KARVI. ALSO O/S MAINTAIN KARVU
5) 2 NO. NA REPORT MA PENALTY COLUMN DISPLAY KARVI
6) SALARY SLAB NU TABLE CREATE KARVU. FROM SALARY/ TO SALARY
7) SKILL/ UNSKILL/ SEMI SKILL EMPLOYEE ACCORDING ENU MIN WAGES SHOW KARVU
8) TDS RELATED CALCULATION ADD KARVU . TE CUT MONTHLY/YEARLY KARVU CHE TE PROVISION APVU. YEARLY MA CUT MARCH MONTH MA THASE. EACH EMP PAR KARVU?
9) WELFARE FUND NI COLUMN ADD KARVI. ALSO REPORT MA PN SHOW KARVI




--01/09/2017

--DROP TABLE PT_SLAB;
CREATE TABLE PT_SLAB
(
  COMPCD		NUMBER(5),
  SRNO			NUMBER(5),
  FREALSAL		NUMBER(10),
  TREALSAL		NUMBER(10),
  PT			NUMBER(5),
  EUSER			VARCHAR2(20),
  EDATE			DATE,
  ETERMINAL		VARCHAR2(20),
  EIP			VARCHAR2(30),
  CUSER			VARCHAR2(20),
  CONSTRAINT PK_PTSLAB			PRIMARY KEY (COMPCD,FREALSAL,TREALSAL,PT),
  CONSTRAINT NN_PTSLAB_SRNO 	CHECK (SRNO IS NOT NULL),
  CONSTRAINT NN_PTSLAB_PT 		CHECK (PT IS NOT NULL),
  CONSTRAINT NN_PTSLAB_EUSER 	CHECK (EUSER IS NOT NULL)
);


--DROP TABLE HIS_PT_SLAB;
CREATE TABLE HIS_PT_SLAB
(
  SRNO		    NUMBER(5),
  FREALSAL		NUMBER(10),
  TREALSAL		NUMBER(10),
  PT			NUMBER(10),
  DML_FLAG	  	VARCHAR2(20),
  DML_USER	  	VARCHAR2(30),
  DML_DATE	  	DATE,
  DML_TERMINAL  VARCHAR2(20), 	
  DML_IP	    VARCHAR2(30)
);

--- 12/09/2017
--DROP TABLE IT_SLAB;
CREATE TABLE IT_SLAB
(
  SRNO			NUMBER(5),
  CATEGORY 		VARCHAR2(20), -- MALE/FEMALE/SENIOR CITIZEN
  FINCOME		NUMBER(10),
  TINCOME		NUMBER(10),  
  IT_PER		NUMBER(5,2),
  EUSER			VARCHAR2(20),
  EDATE			DATE,
  ETERMINAL		VARCHAR2(20),
  EIP			VARCHAR2(30),
  CUSER			VARCHAR2(20),
  CONSTRAINT PK_ITSLAB	PRIMARY KEY (CATEGORY,FINCOME,TINCOME),
  CONSTRAINT NN_ITSLAB_CATEG  CHECK (CATEGORY IS NOT NULL),
  CONSTRAINT NN_ITSLAB_FINCOME  CHECK (FINCOME IS NOT NULL),
  CONSTRAINT NN_ITSLAB_TINCOME  CHECK (TINCOME IS NOT NULL),
  CONSTRAINT NN_ITSLAB_ITPER  CHECK (IT_PER IS NOT NULL),
  CONSTRAINT NN_ITSLAB_SRNO   CHECK (SRNO IS NOT NULL),
  CONSTRAINT NN_ITSLAB_EUSER  CHECK (EUSER IS NOT NULL)
);

--DROP TABLE HIS_IT_SLAB;
CREATE TABLE HIS_IT_SLAB
(
  SRNO			NUMBER(5),
  CATEGORY 		VARCHAR2(20), -- MALE/FEMALE/SENIOR CITIZEN
  FINCOME		NUMBER(10),
  TINCOME		NUMBER(10),  
  IT_PER		NUMBER(5,2),
  DML_FLAG	  	VARCHAR2(20),
  DML_USER	  	VARCHAR2(30),
  DML_DATE	  	DATE,
  DML_TERMINAL  VARCHAR2(20), 	
  DML_IP	    VARCHAR2(30)
);


ALTER TABLE EMPMAS ADD 
(
FIRST_NAME		VARCHAR2(30),
MIDDLE_NAME		VARCHAR2(30),
LAST_NAME		VARCHAR2(30),
STATE			VARCHAR2(30),
UANNO			VARCHAR2(20),	--UNIVERSAL PF ACCOUNTANT NO.
HANDICAPPED		VARCHAR2(1),	--FOR PT/PF CALCUALTION
SENIOR_CITIZEN	VARCHAR2(1),	--FOR PT/PF CALCULATION
PASSPORTNO		VARCHAR2(20)
);


--DROP TABLE GOVT_RULES;
CREATE TABLE GOVT_RULES
(
COMPCD						NUMBER(3),
BASIC_PER					NUMBER(5,2),
DA_PER						NUMBER(5,2),
PF_LIMIT					NUMBER(10),		--ON EBASIC + EDA
PF_LIMIT_FOR_HANDICAPPED	NUMBER(10),		--ON EBASIC + EDA (21000 ON 40% DISABILITY)
EMP_PF_PER					NUMBER(5,2),	--TOTAL OF EMP_PF_PER (12%)
COMP_EPF_PER				NUMBER(5,2),	--EMPLOYEE PROVIDENT FUND
COMP_EPS_PER				NUMBER(5,2),	--EMPLOYE PENSION SCHEME
ESIC_LIMIT					NUMBER(10),		--ON GROSS SALARY
ESIC_LIMIT_FOR_HANDICAPPED	NUMBER(10),		--ON GROSS SALARY (25000 ON 40% DISABILITY) 
EMP_ESIC_PER				NUMBER(5,2),
COMP_ESIC_PER				NUMBER(5,2),
EMP_LABOUR_WELFARE_FUND		NUMBER(3),		--DEDUCT FROM EMP_EARNINGS
COMP_LABOUR_WELFARE_FUND	NUMBER(3),
WELFARE_FUND_MONTH1			VARCHAR2(3),	--JUNE
WELFARE_FUND_MONTH2			VARCHAR2(3),	--DECEMBER	
PF_SENIOR_CITIZEN_AGE		NUMBER(3),		--60
PT_SENIOR_CITIZEN_AGE		NUMBER(3),		--65
IT_SENIOR_CITIZEN_AGE		NUMBER(3),		--60
PF_ADMIN_COST_PER			NUMBER(5,2),	--0.65% (ON EBASIC + EDA)
PF_EDLI_PER					NUMBER(5,2),		--0.50% (ON EBASIC + EDA)
DISABILITY_PER				NUMBER(5),
WORK_PERMIT_AGE				NUMBER(2)
);

INSERT INTO GOVT_RULES (COMPCD,BASIC_PER,DA_PER,PF_LIMIT,EMP_PF_PER,COMP_EPF_PER,COMP_EPS_PER,ESIC_LIMIT,
						EMP_ESIC_PER,COMP_ESIC_PER,EMP_LABOUR_WELFARE_FUND,COMP_LABOUR_WELFARE_FUND,PF_SENIOR_CITIZEN_AGE,PT_SENIOR_CITIZEN_AGE,IT_SENIOR_CITIZEN_AGE,PF_ADMIN_COST_PER,PF_EDLI_PER,
						PF_LIMIT_FOR_HANDICAPPED,ESIC_LIMIT_FOR_HANDICAPPED,WORK_PERMIT_AGE,DISABILITY_PER,
						WELFARE_FUND_MONTH1,WELFARE_FUND_MONTH2
						)
				VALUES (1,67,33,15000,12,3.67,8.33,21000,1.75,4.75,6,12,58,65,60,.65,.50,21000,25000,18,40,
						'JUN','DEC');
COMMIT;

--ESIC NA CALCULATION MA EMP NOV MAHINA MA JOIN THAY NE JAN MA ENI SALARY VADHI NE ESIC LIMIT NI BAHAR NIKDI JAY 
--  TO PAN 'MAR' MONTH SUDHI ESIC KAPASE
--HANDICAPPED NA CASE MA JOINING NA NEXT 3 YEAR SUDHI COMP NU ESIC NU AMT CENTRAL GOVT PAID KARSE


--DROP TABLE HIS_GOVT_RULES;
CREATE TABLE HIS_GOVT_RULES
(
COMPCD						NUMBER(3),
BASIC_PER					NUMBER(5,2),
DA_PER						NUMBER(5,2),
PF_LIMIT					NUMBER(10),		--ON EBASIC + EDA
PF_LIMIT_FOR_HANDICAPPED	NUMBER(10),		--ON EBASIC + EDA (21000 ON 40% DISABILITY)
EMP_PF_PER					NUMBER(5,2),	--TOTAL OF EMP_PF_PER (12%)
COMP_EPF_PER				NUMBER(5,2),	--EMPLOYEE PROVIDENT FUND
COMP_EPS_PER				NUMBER(5,2),	--EMPLOYE PENSION SCHEME
ESIC_LIMIT					NUMBER(10),		--ON GROSS SALARY
ESIC_LIMIT_FOR_HANDICAPPED	NUMBER(10),		--ON GROSS SALARY (25000 ON 40% DISABILITY) 
EMP_ESIC_PER				NUMBER(5,2),
COMP_ESIC_PER				NUMBER(5,2),
ESIC_FMONTH1				VARCHAR2(3),
ESIC_TMONTH1				VARCHAR2(3),
ESIC_FMONTH2				VARCHAR2(3),
ESIC_TMONTH2				VARCHAR2(3),
EMP_LABOUR_WELFARE_FUND		NUMBER(3),		--DEDUCT FROM EMP_EARNINGS
COMP_LABOUR_WELFARE_FUND	NUMBER(3),
WELFARE_FUND_MONTH1			VARCHAR2(3),	--JUNE
WELFARE_FUND_MONTH2			VARCHAR2(3),	--DECEMBER	
PF_SENIOR_CITIZEN_AGE		NUMBER(3),		--60
PT_SENIOR_CITIZEN_AGE		NUMBER(3),		--65
PF_ADMIN_COST_PER			NUMBER(5,2),	--0.65% (ON EBASIC + EDA)
PF_EDLI_PER					NUMBER(5,2),		--0.50% (ON EBASIC + EDA)
DISABILITY_PER				NUMBER(5),
WORK_PERMIT_AGE				NUMBER(2),
DML_FLAG	  				VARCHAR2(20),
DML_USER	  				VARCHAR2(30),
DML_DATE	  				DATE,
DML_TERMINAL  				VARCHAR2(20), 	
DML_IP	    				VARCHAR2(30)
);


/*
--13/09/2017
--DROP TABLE STAFF_LOANMAS
CREATE TABLE STAFF_LOANMAS
(
COMPCD			NUMBER(5),
LOANID			NUMBER(5),
EMPCD			VARCHAR2(6),
LOANDATE		DATE,
LOANAMT			NUMBER(10,2),	--AUTOMATIC (TOTAL OF DETAIL LOAN AMT) - NOT ON CANVAS 
LOANEMI			NUMBER(10,2),	--APPROX AMT TO BE CUT FROM MONTHLY SALARY (CAN CHANGE BY USER) - UPDATABLE TRUE
OSAMT			NUMBER(10),		--AUTO UPDATE FROM SAL CALCUALTION (LAST)
CLOSEDATE		DATE,			--AUTOMATIC COME WHEN OSAMT IS ZERO
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
CONSTRAINT PK_STAFFLOANMAS_LOANID	PRIMARY KEY (COMPCD,LOANID),
CONSTRAINT FK_STAFFLOANMAS_COEMPCD	FOREIGN KEY (COMPCD,EMPCD) REFERENCES PDMFG_VER3.EMPMAS(COMPCD,EMPCD),
CONSTRAINT NN_STAFFLOANMAS_DATE		CHECK (LOANDATE IS NOT NULL),
CONSTRAINT NN_STAFFLOANMAS_AMT		CHECK (LOANAMT IS NOT NULL),
CONSTRAINT NN_STAFFLOANMAS_EMI		CHECK (LOANEMI IS NOT NULL),
CONSTRAINT NN_STAFFLOANMAS_EUSER	CHECK (EUSER IS NOT NULL),
CONSTRAINT NN_STAFFLOANMAS_EDATE	CHECK (EDATE IS NOT NULL)
);

--DROP TABLE STAFF_LOANDET;
CREATE TABLE STAFF_LOANDET
(
COMPCD			NUMBER(5),
SRNO			NUMBER(3),
EMPCD			VARCHAR2(6),
LOANID			NUMBER(5),		--GENERATE UNIQUELEY
LOANDATE		DATE,			--DATE OF LOAN SANCTION
LOANAMT			NUMBER(10,2),
GIVEN_BY		VARCHAR2(50),	--CASH GIVEN BY (EX. CHETANBHAI OR BAPU)
REMARK			VARCHAR2(100),	--EX. FOR MARRIAGE/TO BUY A NEW HOME
CLOSEDATE		DATE,			--UPDATED FROM DATABASE AND SALTRAN MODULE
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
CONSTRAINT FK_STAFFLOANDET_LOANID	FOREIGN KEY (COMPCD,LOANID) REFERENCES STAFF_LOANMAS(COMPCD,LOANID),
CONSTRAINT NN_STAFFLOANDET_EMPCD	CHECK (EMPCD IS NOT NULL),
CONSTRAINT NN_STAFFLOANDET_LOANID	CHECK (LOANID IS NOT NULL),
CONSTRAINT NN_STAFFLOANDET_DATE		CHECK (LOANDATE IS NOT NULL),
CONSTRAINT NN_STAFFLOANDET_AMT		CHECK (LOANAMT IS NOT NULL),
CONSTRAINT NN_STAFFLOANDET_EUSER	CHECK (EUSER IS NOT NULL),
CONSTRAINT NN_STAFFLOANDET_EDATE	CHECK (EDATE IS NOT NULL)
);
*/

--DROP TABLE STAFF_LOAN;
CREATE TABLE STAFF_LOAN
(
COMPCD			NUMBER(5),
EMPCD			VARCHAR2(6),
SRNO			NUMBER(3),
LOANDATE		DATE,			--DATE OF LOAN SANCTION
LOANAMT			NUMBER(10),
LOANEMI			NUMBER(8),	--APPROX AMT TO BE CUT FROM MONTHLY SALARY (CAN CHANGE BY USER) - UPDATABLE TRUE
GIVEN_BY		VARCHAR2(50),	--CASH GIVEN BY (EX. CHETANBHAI OR BAPU)
REMARK			VARCHAR2(100),	--EX. FOR MARRIAGE/TO BUY A NEW HOME
CLOSEDATE		DATE,			--UPDATED FROM DATABASE AND SALTRAN MODULE
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
CONSTRAINT PK_STAFFLOAN			PRIMARY KEY (COMPCD,EMPCD,SRNO),
CONSTRAINT NN_STAFFLOAN_EMPCD	CHECK (EMPCD IS NOT NULL),
CONSTRAINT NN_STAFFLOAN_DATE	CHECK (LOANDATE IS NOT NULL),
CONSTRAINT NN_STAFFLOAN_AMT		CHECK (LOANAMT IS NOT NULL),
CONSTRAINT NN_STAFFLOAN_EUSER	CHECK (EUSER IS NOT NULL),
CONSTRAINT NN_STAFFLOAN_EDATE	CHECK (EDATE IS NOT NULL)
);

--DROP TABLE HIS_STAFF_LOAN;
CREATE TABLE HIS_STAFF_LOAN
(
COMPCD			NUMBER(5),
EMPCD			VARCHAR2(6),
SRNO			NUMBER(3),
LOANDATE		DATE,			--DATE OF LOAN SANCTION
LOANAMT			NUMBER(10),
LOANEMI			NUMBER(8),		--APPROX AMT TO BE CUT FROM MONTHLY SALARY (CAN CHANGE BY USER) - UPDATABLE TRUE
GIVEN_BY		VARCHAR2(50),	--CASH GIVEN BY (EX. CHETANBHAI OR BAPU)
REMARK			VARCHAR2(100),	--EX. FOR MARRIAGE/TO BUY A NEW HOME
CLOSEDATE		DATE,			--UPDATED FROM DATABASE AND SALTRAN MODULE
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20), 	
DML_IP	    	VARCHAR2(30)
);




ALTER TABLE EMPMAS RENAME COLUMN TOTSAL TO REALSAL;

--##### --
--13/09/2017
--FOR ALL COMPANY (WORK AS INDEPENDENT)



--FINAL - CREATE MODULE FOR THIS TABLE 
--DROP TABLE LOCK_SALTRAN;
CREATE TABLE LOCK_SALTRAN
(
COMPCD			NUMBER(5),
SALTYPE			VARCHAR2(1),	--SALAY/LEAVE/BONUS
SALMONTH		VARCHAR2(6),
EUSER			VARCHAR2(20),	
EDATE			DATE,			--DATE + TIME
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CONSTRAINT PK_LOCKSAL	PRIMARY KEY (COMPCD,SALTYPE,SALMONTH),
CONSTRAINT NN_LOCKSAL_SALMONTH CHECK (SALMONTH IS NOT NULL),
CONSTRAINT NN_LOCKSAL_EUSER CHECK (EUSER IS NOT NULL)
);


--DROP TABLE BANKMAS;
CREATE TABLE BANKMAS
(
COMPCD			NUMBER(5),
BANKNM			VARCHAR2(60),
BRANCHCD		NUMBER(3),
BRANCHNM		VARCHAR2(30),
ADDRESS			VARCHAR2(200),
CITY			VARCHAR2(20),
STATE			VARCHAR2(20),
CIF_NO			NUMBER(15),
IFS_CODE		VARCHAR2(15),		--BRANCH CODE
MICR_CODE		NUMBER(15),
EUSER			VARCHAR2(20),	
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
CONSTRAINT PK_BANKMAS_BANKNM 	PRIMARY KEY (COMPCD,BANKNM),
CONSTRAINT UQ_BANKMAS_BRANCH 	UNIQUE (COMPCD,BANKNM,BRANCHNM),
CONSTRAINT NN_BANKMAS_BRANCH 	CHECK (BRANCHNM IS NOT NULL),
CONSTRAINT NN_BANKMAS_ADDRESS   CHECK (ADDRESS IS NOT NULL),
CONSTRAINT NN_BANKMAS_IFSC   	CHECK (IFS_CODE IS NOT NULL),
CONSTRAINT NN_BANKMAS_MICR   	CHECK (MICR_CODE IS NOT NULL),
CONSTRAINT NN_BANKMAS_EUSER		CHECK (EUSER IS NOT NULL),
CONSTRAINT NN_BANKMAS_EDATE		CHECK (EDATE IS NOT NULL)
);

--DROP TABLE HIS_BANKMAS
CREATE TABLE HIS_BANKMAS
(
COMPCD			NUMBER(5),
BANKNM			VARCHAR2(60),
BRANCHCD		NUMBER(3),
BRANCHNM		VARCHAR2(30),
ADDRESS			VARCHAR2(200),
CITY			VARCHAR2(20),
STATE			VARCHAR2(20),
CIF_NO			NUMBER(15),
IFS_CODE		VARCHAR2(15),
MICR_CODE		NUMBER(15),
EUSER			VARCHAR2(20),	
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),	--UPDATE/DELETE USER
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20), 	
DML_IP	    	VARCHAR2(30)
);


ALTER TABLE COMPMAS ADD (FIRMCD	NUMBER(5));
ALTER TABLE COMPMAS ADD CONSTRAINT FOREIGN KEY FK_COMPMAS_FIRMCD REFERENCES FIRMTYPEMAS(FIRMCD);

--14/09/2017

--DROP TABLE SAL_SLAB;
CREATE TABLE SAL_SLAB
(
COMPCD			NUMBER(5),
SRNO			NUMBER(5),
FREALSAL		NUMBER(8),
TREALSAL		NUMBER(8),
BASIC			NUMBER(8),
DA				NUMBER(8),
HRA				NUMBER(8),
EA				NUMBER(8),
TA				NUMBER(8),
MEDIREMB		NUMBER(8),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
CONSTRAINT PK_SALSLAB PRIMARY KEY (COMPCD,SRNO),
CONSTRAINT NN_SALSLAB_FREALSAL CHECK (FREALSAL IS NOT NULL),
CONSTRAINT NN_SALSLAB_TREALSAL CHECK (TREALSAL IS NOT NULL),
CONSTRAINT NN_SALSLAB_BASIC CHECK (BASIC IS NOT NULL),
CONSTRAINT NN_SALSLAB_DA CHECK (DA IS NOT NULL),
CONSTRAINT NN_SALSLAB_EUSER CHECK (EUSER IS NOT NULL)
);



--DROP TABLE HIS_SALARY_SLAB;
CREATE TABLE HIS_SALARY_SLAB
(
COMPCD			NUMBER(5),
SRNO			NUMBER(5),
FREALSAL		NUMBER(8),
TREALSAL		NUMBER(8),
BASIC			NUMBER(8),
DA				NUMBER(8),
HRA				NUMBER(8),
EA				NUMBER(8),
TA				NUMBER(8),
MEDIREMB		NUMBER(8),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),	--UPDATE/DELETE USER
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20), 	
DML_IP	    	VARCHAR2(30)
);


--DROP TABLE SKILLMAS;
CREATE TABLE SKILLMAS
(
COMPCD			NUMBER(5),
SRNO			NUMBER(3),
STATE			VARCHAR2(20),	--GUJARAT/MAHARASHTRA
SKILLTYPE		VARCHAR2(20),	--SEMI-SKILLED/SKILLED/UN-SKILLED
REMARKS			VARCHAR2(50),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
CONSTRAINT PK_SKILLMAS PRIMARY KEY (COMPCD,SKILLTYPE),
CONSTRAINT NN_SKILLMAS_STATE CHECK (STATE IS NOT NULL),
CONSTRAINT NN_SKILLMAS_SKILL CHECK (SKILLTYPE IS NOT NULL),
CONSTRAINT NN_SKILLMAS_EUSER CHECK (EUSER IS NOT NULL)
);

--DROP TABLE HIS_SKILLMAS;
CREATE TABLE HIS_SKILLMAS
(
COMPCD			NUMBER(5),
SRNO			NUMBER(3),
STATE			VARCHAR2(20),
SKILLTYPE		VARCHAR2(20),
REMARKS			VARCHAR2(50),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20), 	
DML_IP	    	VARCHAR2(30)
);


--DROP TABLE

ALTER TABLE EMPMAS DROP COLUMN PER_STATE;
ALTER TABLE EMPMAS ADD DISABILITY_PER	NUMBER(5);
ALTER TABLE EMPMAS ADD SKILLTYPE	VARCHAR2(20);
GRANT REFERENCES ON SKILLMAS TO PDMFG_VER3;
ALTER TABLE EMPMAS ADD CONSTRAINT FK_EMPMAS_SKILL FOREIGN KEY (COMPCD,SKILLTYPE) REFERENCES ATTEN.SKILLMAS(COMPCD,SKILLTYPE);
ALTER TABLE EMPMAS DROP COLUMN PHY_DISABILITY;
ALTER TABLE EMPMAS ADD PERSTATE VARCHAR2(20);
ALTER TABLE EMPMAS ADD OTPER	NUMBER(7,2);



--MINIMUM WAGES ->  GUJARAT (BASIC+DA+HRA) AND MAHARASTRA (BASIC+DA)
--CHECK MINIMUM WAGES WITH SALARY CREATION OF EMP
--DROP TABLE WAGESMAS;
CREATE TABLE WAGESMAS
(
COMPCD			NUMBER(5),
STATE			VARCHAR2(20),
FDATE			DATE,
TDATE			DATE,
SKILLTYPE		VARCHAR2(20),
BASIC			NUMBER(7,2),		-- PER DAY
DA				NUMBER(7,2),		-- PER DAY
HRA				NUMBER(7,2),		-- PER DAY
WAGES			NUMBER(7,2),		-- PER DAY WAGES (TOTAL OF (BASIC + DA + HRA)
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(20),
CUSER			VARCHAR2(20),
CONSTRAINT PK_WAGESMAS PRIMARY KEY (COMPCD,STATE,FDATE,TDATE,SKILLTYPE),
CONSTRAINT NN_WAGESMAS_STATE		CHECK (STATE IS NOT NULL),
CONSTRAINT NN_WAGESMAS_FDATE 		CHECK (FDATE IS NOT NULL),
CONSTRAINT NN_WAGESMAS_TDATE 		CHECK (TDATE IS NOT NULL),
CONSTRAINT NN_WAGESMAS_SKILLTYPE	CHECK (SKILLTYPE IS NOT NULL),
CONSTRAINT NN_WAGESMAS_MIN_WAGES	CHECK (WAGES IS NOT NULL),
CONSTRAINT NN_WAGESMAS_EUSER 		CHECK (EUSER IS NOT NULL)
);

--DROP TABLE HIS_WAGESMAS;
CREATE TABLE HIS_WAGESMAS
(
COMPCD			NUMBER(5),
STATE			VARCHAR2(20),
FDATE			DATE,
TDATE			DATE,
SKILLTYPE		VARCHAR2(20),
BASIC			NUMBER(5,2),
DA				NUMBER(5,2),
HRA				NUMBER(5,2),
WAGES			NUMBER(5,2),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(15),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20), 	
DML_IP	    	VARCHAR2(30)
);





CREATE OR REPLACE FUNCTION GETAGE(FDATE DATE, TDATE DATE, PFLAG VARCHAR2) RETURN NUMBER IS
  VYEAR  NUMBER(3);
  VMONTH NUMBER(3);
  VDAYS  NUMBER(3);
BEGIN
  SELECT TRUNC(MONTHS_BETWEEN(TDATE, FDATE) / 12) YEARS,
         TRUNC(MONTHS_BETWEEN(TDATE, FDATE) - (TRUNC(MONTHS_BETWEEN(TDATE, FDATE) / 12) * 12)) MONTHS,
         TRUNC((MONTHS_BETWEEN(TDATE, FDATE) - TRUNC(MONTHS_BETWEEN(TDATE, FDATE))) * 30) DAYS
         INTO VYEAR, VMONTH, VDAYS FROM DUAL;

  IF PFLAG = 'YEAR' THEN
    RETURN VYEAR;
  ELSIF PFLAG = 'MONTH' THEN
    RETURN VMONTH;
  ELSIF PFLAG = 'DAY' THEN
    RETURN VDAYS;
  END IF;
END;


--22/09/2017

ALTER TABLE EMPMAS DROP COLUMN UANNO;

ALTER TABLE EMPMAS ADD
(
PAYROLL_EMPNO	VARCHAR2(10),		--FOR PAYROLL PURPOSE
D_RESIGNDATE	DATE,
PF_JOINDATE		DATE,
PF_UANNO		VARCHAR2(20),
ESIC_BRANCH		VARCHAR2(30),
FATHERNM		VARCHAR2(100),
WEIGHT			NUMBER(3),
HEIGHT			VARCHAR2(6),
PHY_CERTY_DATE	DATE,
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(15)
);


ALTER TABLE COMPMAS ADD
(
WEB_ADDRESS			VARCHAR2(100),
STATE				VARCHAR2(20),
OCCUPIERNM			VARCHAR2(60),		--NAME OF BOSS/ACCOUNTANT/PARTNER
DESIGNATION			VARCHAR2(30),		--DIRECTOR/PARTNER
ESTABLISHMENT_DATE	DATE,
ESIC_COVERAGE_DATE	DATE,
PF_COVERAGE_DATE	DATE
);


--PENDING TO APPLY 
ALTER TABLE EMPMAS ADD 
(
PAY_STRUCTURE		VARCHAR2(20)		--ATTENDANCE/FIXED/WAGES
);

--PENDING
ALTER TABLE EMPMAS DROP COLUMN SENIOR_CITIZEN;

--- 07/10/2017
--CREATE HISTORY TABLE FOR SALTRAN
--DROP TABLE HIS_SALTRAN;
CREATE TABLE HIS_SALTRAN 
(
COMPCD			NUMBER(5),
DEPTCD			NUMBER(5),
EMPCD			VARCHAR2(6),		
SALTYPE        	VARCHAR2(1),  	-- 'S' FOR SALARY, 'B' FOR BONUS , 'L' FOR LEAVE
SALMONTH       	VARCHAR2(6),  	-- 201707,201706
PAYDATE        	DATE,      	-- PAYMENT DATE OF BANK (CHEQUE DATE)  
WD             	NUMBER(5),     -- WORKING DAYS - (EX - 26)
PD             	NUMBER(7,2),   -- PRESENT DAYS (WD KARTA ATTEN_PD VADHI JAY TO PD = WD THAI JAY)
ATTEN_PD		NUMBER(7,2), 	-- ORIGINAL PRESENT DAYS FROM ATTEN (TOTAL PRESENT DAYS USING PUCHING SYSTEM)
TD             	NUMBER(5),    	-- TOTAL DAYS OF MONTH  (EX AUG - 31)
REALSAL		 	NUMBER(10,2), 	-- ACTUAL SALARY (CASHSAL + CHQSAL) - 57000 (EX OF PK)
CASHSAL		 	NUMBER(10,2),	-- CASH SALARY (40000)
CHQSAL		 	NUMBER(10,2), 	-- CHEQUE SALARY (17000)
PERDAYSAL		NUMBER(10,2) ,  -- CHEQUE SAL/WD
IMPORTSAL		NUMBER(10,2),	-- VARIABLE SALARY
--BIFERCUATION OF CHQSAL 
BASIC          	NUMBER(10,2), 	-- ACTUAL BASIC
DA             	NUMBER(10,2), 	-- ACTUAL DA
HRA            	NUMBER(10,2), 	-- ACTUAL HRA
TA             	NUMBER(10,2), 	-- ACTUAL TA
EA			 	NUMBER(10,2), 	-- ACTUAL EDUCATION ALLOWANCE
MEDIREMB		NUMBER(10,2),
BASICS         	NUMBER(10,2), 	-- BASIC + DA
ALLOWANCES	 	NUMBER(10,2),   -- HRA + EA + TA
--EARNING COLUMNS  
EBASIC         	NUMBER(10,2), 	
EDA            	NUMBER(10,2),
EHRA           	NUMBER(10,2),
ETA            	NUMBER(10,2),  
EEA			 	NUMBER(10,2),
EBASICS		 	NUMBER(10,2),	-- EBASIC + EDA
EALLOWANCES	 	NUMBER(10,2),   -- EHRA + EEA + ETA
EMEDIREMB		NUMBER(10,2),
ECASHSAL	    NUMBER(10,2),	-- EARNINGS OF CASH SAL 
ECHQSAL		 	NUMBER(10,2),	-- TOTAL OF EARNINGS COLUMN ( EBASIC + EDA + EHRA + EEA + ETA )
PFGROSS        	NUMBER(10,2),   -- GROSS ELIGIBLE SALARY FOR PF (18000) 
ESICGROSS      	NUMBER(10,2),   -- GROSS SALARY FOR ESIC
COMPEPF_PER    	NUMBER(6,2),	--
COMPEPS_PER    	NUMBER(6,2),	-- PENSION SCHEME
COMPPF_PER     	NUMBER(6,2),	-- (COMPEPF_PER + COMPFPF_PER)
COMP_EPF       	NUMBER(10,2),	-- AMT COLUMNS
COMP_EPS       	NUMBER(10,2),
COMP_PF        	NUMBER(10,2),	-- (COMPEPF + COMPFPF)
COMPESIC_PER	NUMBER(10,2),
COMPESIC		NUMBER(10,2),
EMPPF_PER      	NUMBER(6,2),    -- (EMPEPF_PER + EMPFPF_PER)
EMPPF          	NUMBER(10,2), 	-- (EMPEPF + EMPFPF)  -- 780 ON 12000 (-)
EMPESIC_PER    	NUMBER(6,2),    -- %
EMPESIC        	NUMBER(10,2),   -- AMT (-)
PT             	NUMBER(10,2),   -- PROFESSIONAL TAX (-)
EMPLWF			NUMBER(5),
COMPLWF	     	NUMBER(5),
TOTDEDUCT	 	NUMBER(10,2), 	-- TOTAL OF DEDUCTION  (PF + ESIC + PT + EWF)
--ADVANCE,PENALTY AND INCENTIVE  CASH SALARY PAR JA CALCUALTION THASE (NE CUT THASE)
ADVANCE        	NUMBER(10,2),   -- UPAD (-) - NO NEED OF NOW
LOANEMI			NUMBER(10,2),
INCENTIVE	    NUMBER(10,2),   -- (+) (ONLY IN CASH)  -- NO NEED FOR NOW JUST COLUMN ADDED
OTHER_INCENTIVE NUMBER(10,2),
OTMIN			NUMBER(10),
OTPER			NUMBER(7,2),	-- ADD IN CASH SALARY
OTAMT	 		NUMBER(10,2),	-- O
PENALTY		 	NUMBER(10,2),   -- (-)
OTHER_PENALTY	NUMBER(10,2),	-- (-)	VALUE COME FROM OTHER PENALTY ENTRY MODULE
NETCHQSAL	   	NUMBER(10,2), 	-- PLUS MINUS THAINE NET SALARY  (CHQ SALARY)  ( ECHQSAL - TOTDEDUCT)
NETCASHSAL    	NUMBER(10,2), 	-- CASH APAY TE SALARY ( (ECASHSAL + INCENTIVE + OTHER_INCENTIVE ) - (ADVANCE + PENALTY + OTHER_PENALTY + LOAN_EMI) )
NETPAY		 	NUMBER(10,2), 	-- NETCHQSAL + NETCASHSAL
ACNO         	VARCHAR2(20),	-- EMPLOYEE BANK ACNO
BANKNM         	VARCHAR2(20),
PAYMODE        	VARCHAR2(40),  -- CASH/CHEQUE
--LOANID		 	NUMBER(5),
TDS         	NUMBER(10,2),
SURCHARGE      	NUMBER(10,2),
CESS           	NUMBER(10,2),
TOTTDS         	NUMBER(10,2),	--TOTAL OF TDS + SURCHARGE + CESS 
EMP_TYPE	    VARCHAR2(1),
EUSER          	VARCHAR2(30),
ETERMINAL		VARCHAR2(20),
EDATE			DATE,
EIP				VARCHAR2(20),
DML_FLAG		VARCHAR2(20),
DML_USER		VARCHAR2(30),
DML_DATE		DATE,	
DML_TERMINAL	VARCHAR2(30),
DML_IP			VARCHAR2(30)
); 

--HIS_SALTRAN UPTO DATE ON 27/11/2017 
--UPTO DATE - 09/12/2017 - EMP_TYPE COLUMN ADDED

2) CREATE NEW PACKAGE PKG_SALTRAN


--09/10/2017
--DROP TABLE ESIC_SLAB;
CREATE TABLE ESIC_SLAB 
(
COMPCD			NUMBER(5),
FYCD			NUMBER(5),
FMONTH			VARCHAR2(6),
TMONTH			VARCHAR2(6),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
CONSTRAINT PK_ESIC_SLAB	PRIMARY KEY (COMPCD,FYCD,FMONTH,TMONTH),
CONSTRAINT NN_ESIC_SLAB_FMONTH CHECK (FMONTH IS NOT NULL),
CONSTRAINT NN_ESIC_SLAB_TMONTH CHECK (TMONTH IS NOT NULL),
CONSTRAINT NN_ESIC_SLAB_EUSER CHECK (EUSER IS NOT NULL)
);



--DROP TABLE HIS_ESIC_SLAB;
CREATE TABLE HIS_ESIC_SLAB 
(
COMPCD			NUMBER(5),
FYCD			NUMBER(5),
FMONTH			VARCHAR2(6),
TMONTH			VARCHAR2(6),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20), 	
DML_IP	    	VARCHAR2(30)
);


ALTER TABLE GOVT_RULES DROP (ESIC_FMONTH1,ESIC_TMONTH1,ESIC_FMONTH2,ESIC_TMONTH2);
ALTER TABLE HIS_GOVT_RULES DROP (ESIC_FMONTH1,ESIC_TMONTH1,ESIC_FMONTH2,ESIC_TMONTH2);


--PENDING - MAY BE NO NEED OF THIS
ALTER TABLE DEPTMAS ADD 
(
D_INTIME		VARCHAR2(5),
D_OUTTIME		VARCHAR2(5)
);


ALTER TABLE EMPATTENDANCE ADD 
(
MANUAL_IN_REASONID		NUMBER(4),
MANUAL_OUT_REASONID		NUMBER(4)	
);

ALTER TABLE CARD_TRN_LOG ADD 
(
REASONID		NUMBER(4)
);

--25/11/2017

ALTER TABLE SKILLMAS ADD CONSTRAINT UQ_SKILLMAS_STATESKILL	UNIQUE (STATE,SKILLTYPE);
ALTER TABLE WAGESMAS ADD CONSTRAINT FK_WAGESMAS_SKILLTYPE FOREIGN KEY (STATE,SKILLTYPE) REFERENCES SKILLMAS(STATE,SKILLTYPE);

--07/12/2017


ALTER TABLE EMPMAS ADD 
(
ADD1	VARCHAR2(50),
ADD2	VARCHAR2(50),
ADD3	VARCHAR2(50),
PADD1	VARCHAR2(50),
PADD2	VARCHAR2(50),
PADD3	VARCHAR2(50)
);


ALTER TABLE EMPMAS RENAME COLUMN PERSTATE TO PSTATE;
ALTER TABLE EMPMAS RENAME COLUMN RESADDRESS TO ADDRESS;
ALTER TABLE EMPMAS RENAME COLUMN RESTELNO TO TELNO;
ALTER TABLE EMPMAS RENAME COLUMN PERADDRESS TO PADDRESS;
ALTER TABLE EMPMAS RENAME COLUMN PERTELNO TO PTELNO;

--HISTORY

ALTER TABLE HIS_EMPMAS RENAME COLUMN PER_STATE TO PSTATE;
ALTER TABLE HIS_EMPMAS RENAME COLUMN RESADDRESS TO ADDRESS;
ALTER TABLE HIS_EMPMAS RENAME COLUMN RESTELNO TO TELNO;
ALTER TABLE HIS_EMPMAS RENAME COLUMN PERADDRESS TO PADDRESS;
ALTER TABLE HIS_EMPMAS RENAME COLUMN PERTELNO TO PTELNO;

ALTER TABLE HIS_EMPMAS ADD 
(
ADD1	VARCHAR2(50),
ADD2	VARCHAR2(50),
ADD3	VARCHAR2(50),
PADD1	VARCHAR2(50),
PADD2	VARCHAR2(50),
PADD3	VARCHAR2(50)
);


ALTER TABLE EMPMAS MODIFY 
(
ADD1	VARCHAR2(80),
ADD2	VARCHAR2(80),
ADD3	VARCHAR2(80),
PADD1	VARCHAR2(80),
PADD2	VARCHAR2(80),
PADD3	VARCHAR2(80)
);




ALTER TABLE HIS_EMPMAS MODIFY 
(
ADD1	VARCHAR2(80),
ADD2	VARCHAR2(80),
ADD3	VARCHAR2(80),
PADD1	VARCHAR2(80),
PADD2	VARCHAR2(80),
PADD3	VARCHAR2(80)
);



--################################################---------------------------------------------
--ADD OVERTIME %  IN EMPMAS
--BANK MASTER
--PAY_STRUCTURE (AUTO FIX/FIX/SALARY/WAGES)
--SKILL MASTER - CALCULATION AND EFFECT OF SKILL IN SALARY ?
--CALCULATION OF MEDIREMB ? - AS OTHER ALLOWANCE
--MINIMUM WAGES MAS

--- 16/09/2017
--FIRMTYPE MA SHORTNAME COLUMN ADD KARVI
--INVESTMENT MASTERLIC MASTER

--- 20/09/2017 -- MEETING WITH KUNAL BHAI PARAGBHAI AND PARESHBHAI
--1) ADD OTHER PENALTY COLUMN IN SALTRAN TABLE
2) WAGES MASTER
	-- SKILLTYPE--MIN WAGES--PERDAY WAGES--DAYS--FROM DATE--TO DATE
	-- TIME PERIOD (APR TO SEP AND OCT TO MAR)
	-- EMP. NI PERDAY SALARY PERDAY WAGES KARTA OCHI NA THAVI JOIE
	-- PER DAY WAGES = (BASIC + DA + HRA)/MONTHDAYS
	-- STATE WISE MIN. WAGES DIFF HOI SAKE
	-- MIN WAGES NI EFFECT EMP. MASTER AND SALARY CREATION MA KARVANI RESE
	-- MAINTAIN STATEWISE FACTORY AND SHOP-ESTABLISHMENT
	-- GUJARAT MA WAGES BASIC + DA + HRA PAR COUNT THASE. AND MH(MAHARASTR) MA BASIC + DA PAR THASE
	-- SALARY TIME PAR MIN WAGES KARTA OCHU HOY TO POPUP AVU JOIE
	-  MINIMUM WAGES MAS - 
	-  WAGES MAS MODULE MA STATE DISPLAY KARVANI JARUR NATHI LAGTI , A AUTOMATIC COMPMAS MA JE STATE DEFINE HOY ENI PARTHI LAI LEVANU   

-- EMP MASTER MA EKVAR BASIC ADD THAI JAY PACHI TE UPDATE KARINE DOWN NAI KARI SAKE.
-- EMP MASTER MA PF LIMIT YES KARI AND ENU PF CUT THAY TYAR PACHI TE PF LIMIT NE NO NAI KARI SAKAY
-- EMP MASTER MA PHY DISABLITI ADD KARE TYARE TENA % COMPULSORY ADD KARVANA RESE

3) PF 
-- PF BASIC + DA PAR CALCULATE THASE
-- PF CUT THAY TYARE ENI GROSS AMOUNT LIMIT AMOUNT KARTA VADHI JAY TYARE MAX PF AMT JE HASE TE CUT THASE.
-- PF MATE SENIOR CITIZEN LIMIT 58 RESE
-  EMPLOYEE PF  - 12%
   EMPLOYER EPF - 3.67%
   EMPLOYER EPS - 8.33%
-- EMP AGE ABOVE 58 THASE TYARE 
-  EMPLOYEE PF  - 12%
   EMPLOYER EPF - 12%
   EMPLOYER EPS - 0
-- HANDICAPPED EMP NI PF GROSS LIMIT 21000 
-- NORMAL EMP PF LIMIT 15000
-- HANDICAPPED MATE 40%PHY DISABILITY HASE TO HANDICAPPED ACCORDING PF LAGSE OTHERWISE NORMAL LAGSE   

4) ESIC
-- NORMAL ESIC GROSS LIMIT 21000
-- HANDICAPPED ESIC GROSS LIMIT 25000. HANDICAPPED MATE PHY DISABILITY LIMIT 40%
-- ESIC TOTAL EARNING PAR LAGSE
- ESIC EMPLOYEE - 1.75 %
  ESIC EMPLOYER - 4.75 %
-- ESIC CUT MATENO TIME PERIOD (OCT-MAR AND APR-SEPT) RESE
-- ESIC COUNT MA OT+INCENTIVE ADD KARVANU
-- ESIC TENA MONTH PERIOD NI BETWEEN MA CLOSE NAI KARI SAKAY
   EX- APR. MA EMP NI SALARY 18500 CHE AND MAY MA 23000 THAI TOPN SEPT SUDHI TENE ESIC CUT THASE TYAR PACHI TE LIMIT MA NA AVTO HOVATHI NIKLI JASE
-- ESIC COUNT THAY TYARE MEDIREMB TEMATHI MINUS KARVU

--13/12/2017 - WITH CONFIRMATION OF PARAGBHAI
- IF CHQSAL = 21500 EX. (BASIC-21000 AND MEDI 500) THEN  EMP IS ELIGIBLE FOR ESIC AND ESIC GROSS WILL BE 21500 
  IF CHQSAL = 21500 EX. (BASIC-21000 AND MEDI 400 AND EA 100) THEN  EMP IS NOT ELIGIBLE FOR ESIC 

5) PT
-- TOTAL EARNING PAR CUT THASE
   0 - 5999 = 0
   6000 - 8999 = 80
   9000 - 11999 = 15000
   12000 - ABOVE = 200
-- STATEWISE PT DIFF. HOI SAKE
-- MH MA FEB MONTH MA 200 RS PT FIX CUT THAY
-- HANDICAPPED EMP MA PHY DISABILITY 40% HASE TO TENE 0 PT LAGSE
-- SENIOR CITIZEN EMP NI AGE LIMIT 65. 65 THI UP HASE TENE 0 PT LAGSE

6) LWF
-- TOTAL EARNING PAR CUT THASE
-- IN MH EMPLOYE - 12 RS AND EMPLOYER - 18 RS
-- IN GUJARAT EMPLOYE - 6 RS AND EMPLOYER - 12 RS  
-- CUT EVERY JUN AND DECEMBER MONTH MA THASE


---- ###  USED TABLE IN ATTEN
CARD_TRN_T
CARD_TRN_LOG
EMPATTENDACESUMMARY
EMPWORKINGHOURS
EMPATTENDANCE


--23/01/2018
DROP USER PAY;
DROP TABLESPACE PAY;




DROP USER INC;
DROP TABLESPACE INV;

DROP TABLESPACE INV INCLUDING CONTENTS AND DATAFILES;
DROP TABLESPACE PAY INCLUDING CONTENTS AND DATAFILES;


--ATTENDANCE


-- 06/04/2017 - ADD NEW TABLE FOR EMPLOYEE ATEENDANCE IN ATTEN DATABASE
-- DROP TABLE EMPATTENDANCE;
CREATE TABLE EMPATTENDANCE
(
COMPCD            NUMBER(5),
TRNNO             NUMBER(8),
TRNID             NUMBER(8),
SRNO              NUMBER(3),
CARDNO            VARCHAR2(16),
EMPCD             VARCHAR2(6),
EMPNO             VARCHAR2(6),
JOINDATE       	  DATE, -- actual date
D_JOINDATE        DATE, -- ON PAYROLL DATE
DEPTCD            NUMBER(5),
TRNDATE           DATE,
DAYTYPE           VARCHAR2(5), --AB/PR/HF/WO/HL
COMP_INTIME       VARCHAR2(5), -- AUDIT IN TIME/OUTTIME
COMP_OUTTIME      VARCHAR2(5),
COMP_TOTMIN       NUMBER,
COMP_HALFMIN      NUMBER,
EMP_INTIME        VARCHAR2(5), -- EMP NO TIME (SHIFT/ HOLIDAY/ EMPMAS)
EMP_OUTTIME       VARCHAR2(5),
EMP_TOTMIN        NUMBER,
EMP_TOTHRS        VARCHAR2(5),
INTIME            VARCHAR2(5), -- EMP NO PUNCHING TIME
OUTTIME          VARCHAR2(5),
TOTMIN           NUMBER,
TOTHRS           VARCHAR2(5),
LATEMIN           NUMBER,
LATEHRS           VARCHAR2(5),
OVERMIN           NUMBER,
OVERHRS           VARCHAR2(5),  
D_INTIME          VARCHAR2(5),
D_OUTTIME        VARCHAR2(5),
D_TOTMIN          NUMBER,
D_TOTHRS          VARCHAR2(5),
D_LATEMIN         NUMBER,
D_LATEHRS         VARCHAR2(5),
D_OVERMIN         NUMBER,
D_OVERHRS         VARCHAR2(5),
CONSTRAINT PK_EMPATTEN_TRNNO PRIMARY KEY (TRNNO),
CONSTRAINT NN_EMPATTEN_TRNDATE CHECK (TRNDATE IS NOT NULL),
CONSTRAINT NN_EMPATTEN_DAYTYPE CHECK (DAYTYPE IS NOT NULL), 
CONSTRAINT CK_EMPATTEN_DAYTYPE CHECK (DAYTYPE IN ('AB','PR','HF','HL','WO')), 
CONSTRAINT FK_EMPATTEN_COEMPCD FOREIGN KEY (COMPCD,EMPCD)  REFERENCES PDMFG_VER3.EMPMAS(COMPCD,EMPCD),
CONSTRAINT FK_EMPATTEN_CODEPTCD FOREIGN KEY (COMPCD,DEPTCD)  REFERENCES PDMFG_VER3.DEPTMAS(COMPCD,DEPTCD)
);

CREATE SEQUENCE SEQ_EMPATTEN_TRNNO
MINVALUE 1
MAXVALUE 1000000
START WITH 1
INCREMENT BY 1
CACHE 20;

-- DROP TABLE EMPATTENDANCE;
CREATE TABLE EMPATTENDANCE
(
COMPCD            NUMBER(5),
TRNNO             NUMBER(8),
TRNID             NUMBER(8), 	--STORE VALUE OF COLUMN ID FROM CARD_TRN_LOG TABLE
SRNO              NUMBER(3),
CARDNO            VARCHAR2(16),
EMPCD             VARCHAR2(6),
EMPNO             VARCHAR2(6),
JOINDATE       	  DATE, 		--ACTUAL DATE
D_JOINDATE    	  DATE, 		--ON PAYROLL DATE
DEPTCD            NUMBER(5),
TRNDATE           DATE,
DAYTYPE           VARCHAR2(5), 	--AB/PR/HF/WO/HL
COMP_INTIME       VARCHAR2(5), 	--AUDIT(REAL) IN TIME/OUTTIME
COMP_OUTTIME      VARCHAR2(5),
COMP_TOTMIN       NUMBER,
EMP_INTIME        VARCHAR2(5), 	--EMP NO TIME (SHIFT/ HOLIDAY/ EMPMAS)
EMP_OUTTIME       VARCHAR2(5),
EMP_TOTMIN        NUMBER,
INTIME            VARCHAR2(5), 	--EMP NO PUNCHING TIME
OUTTIME           VARCHAR2(5),
TOTMIN            NUMBER,
LATEMIN           NUMBER,
OVERMIN           NUMBER,
D_INTIME          VARCHAR2(5),	--DUMMY/DISPLAY (FOR AUDIT PURPOSE)
D_OUTTIME         VARCHAR2(5),
D_TOTMIN          NUMBER,
D_LATEMIN         NUMBER,
D_OVERMIN         NUMBER,
CONSTRAINT PK_EMPATTEN_TRNNO PRIMARY KEY (TRNNO),
CONSTRAINT NN_EMPATTEN_TRNDATE CHECK (TRNDATE IS NOT NULL),
CONSTRAINT NN_EMPATTEN_DAYTYPE CHECK (DAYTYPE IS NOT NULL), 
CONSTRAINT CK_EMPATTEN_DAYTYPE CHECK (DAYTYPE IN ('AB','PR','HF','HL','WO')), 
CONSTRAINT FK_EMPATTEN_COEMPCD FOREIGN KEY (COMPCD,EMPCD)  REFERENCES PDMFG_VER3.EMPMAS(COMPCD,EMPCD),
CONSTRAINT FK_EMPATTEN_CODEPTCD FOREIGN KEY (COMPCD,DEPTCD)  REFERENCES PDMFG_VER3.DEPTMAS(COMPCD,DEPTCD)
);

--29/03/2018

ALTER TABLE EMPATTENDANCE ADD 
(
UPDATE_REASON	VARCHAR2(60)
);

--TRIGGER NOT CREATED FOR THIS TABLE 
--KEM KE AA TABLE SCHEDULE MATHI PAN UPDATE THAY CHHE, A CASE MA PAN TRIGGER THROUGH ENTRY PADSE
--HISTORY MANUAL INSERT STATEMENT THI CREATE THASE
CREATE TABLE HIS_EMPATTENDANCE 
(
  COMPCD        NUMBER(5),
  TRNNO         NUMBER(8),
  TRNID         NUMBER(8),
  SRNO          NUMBER(3),
  CARDNO        VARCHAR2(16),
  EMPCD         VARCHAR2(6),
  EMPNO         VARCHAR2(6),
  JOINDATE      DATE,
  D_JOINDATE    DATE,
  DEPTCD        NUMBER(5),
  TRNDATE       DATE,
  DAYTYPE       VARCHAR2(5),
  COMP_INTIME   VARCHAR2(5),
  COMP_OUTTIME  VARCHAR2(5),
  COMP_TOTMIN   NUMBER,
  EMP_INTIME    VARCHAR2(5),
  EMP_OUTTIME   VARCHAR2(5),
  EMP_TOTMIN    NUMBER,
  INTIME        VARCHAR2(5),
  OUTTIME       VARCHAR2(5),
  TOTMIN        NUMBER,
  LATEMIN       NUMBER,
  OVERMIN       NUMBER,
  D_INTIME      VARCHAR2(5),
  D_OUTTIME     VARCHAR2(5),
  D_TOTMIN      NUMBER,
  D_LATEMIN     NUMBER,
  D_OVERMIN     NUMBER,
  RUN_SCHDULE   VARCHAR2(1),
  IN_REASONID   NUMBER(4),
  OUT_REASONID  NUMBER(4),
  UPDATE_REASON VARCHAR2(60),
  DML_FLAG	  	VARCHAR2(20),
  DML_USER	  	VARCHAR2(30),
  DML_DATE	  	DATE,
  DML_TERMINAL  VARCHAR2(20), 	
  DML_IP	    VARCHAR2(30)  
);

--18/07/2018
--LASTDATE MA EMPLOYEE AAVE TO ENE FULL MALSE OTHERWISE HALF MALSE
--IN BETWEEN SUNDAY AAVSE TO ENI PAN PRESENT JA GANASE

--DROP TABLE AUTO_ATTENDANCE;
CREATE TABLE AUTO_ATTENDANCE
( 
COMPCD   		NUMBER(5),
SRNO     		NUMBER(6),
EMPCD    		VARCHAR2(6),
FDATE    		DATE,
TDATE    		DATE,
REASON   		VARCHAR2(100),
EUSER    		VARCHAR2(20),
EDATE    		DATE,
ETERMINAL 		VARCHAR2(20),
EIP				VARCHAR2(15),
CUSER    		VARCHAR2(20),
CONSTRAINT PK_AUTO_ATTEN		PRIMARY KEY (COMPCD,SRNO),
CONSTRAINT FK_AUTO_ATTEN_COEMP	FOREIGN KEY (COMPCD,EMPCD) REFERENCES PDMFG_VER3.EMPMAS (COMPCD,EMPCD),
CONSTRAINT NN_AUTO_ATTEN_EMP	CHECK (EMPCD IS NOT NULL),
CONSTRAINT NN_AUTO_ATTEN_FDATE	CHECK (FDATE IS NOT NULL),
CONSTRAINT NN_AUTO_ATTEN_TDATE	CHECK (TDATE IS NOT NULL),
CONSTRAINT NN_AUTO_ATTEN_EUSER	CHECK (EUSER IS NOT NULL),
CONSTRAINT NN_AUTO_ATTEN_EDATE	CHECK (EDATE IS NOT NULL),
CONSTRAINT CK_AUTO_ATTEN_TDATE	CHECK (TDATE >= FDATE)
);

--31/07/2018 
--COLUMN ADDED FOR AUTO ATTENDANCE (PR/AB/HF CALCULATIONS)

ALTER TABLE EMPATTENDANCE ADD 
(
A_M_FLAG	VARCHAR2(10)
);


--05/01/2019

CREATE INDEX IDX_CARD_TRN_LOG_EMPDT  ON CARD_TRN_LOG (EMPCD,TRNDATE) ;
GRANT SELECT ON EMPATTENDANCE TO PDMFG_vER3;

GRANT EXECUTE ON MUMBAI_ATTENDANCE TO PDMFG_VER3;
GRANT UPDATE,DELETE ON DUMMY_EMPATTENDANCE TO PDMFG_VER3;
GRANT UPDATE,DELETE ON MUM_ATTEN_LOG TO PDMFG_VER3;


GRANT SELECT,INSERT,UPDATE,DELETE ON DUMMY_EMPATTENDANCE TO PDMFG_VER3;
GRANT SELECT,INSERT,UPDATE,DELETE ON MUM_ATTEN_LOG TO PDMFG_VER3;


ALTER TABLE EMPATTENDANCE ADD 
(
OTMIN	NUMBER(3)
);


--## trigger

--27/11/2017...
--PARESH KATARIA...
--SCRIPT OF PAYROLL (PARISHI DIAMOND) - FOR DATABASE TRIGGER
--

--PARISHI DIAMOND - SURAT = FACTORY AND MUMBAI = SHOP
--######################################################################################################################################

CREATE OR REPLACE TRIGGER AUD_SALTRAN
  AFTER UPDATE OR DELETE ON SALTRAN
  FOR EACH ROW
 DECLARE
    L_OPERATION VARCHAR2(10);
BEGIN
  IF UPDATING THEN
    L_OPERATION := 'UPDATE';
  ELSE
    L_OPERATION := 'DELETE';
  END IF;

   INSERT INTO HIS_SALTRAN
    (COMPCD,
     EMPCD,
     SALTYPE,
     SALMONTH,
     PAYDATE,
     WD,
     PD,
     ATTEN_PD,
     TD,
     REALSAL,
     CASHSAL,
     CHQSAL,
     PERDAYSAL,
     IMPORTSAL,
     BASIC,
     DA,
     HRA,
     TA,
     EA,
     MEDIREMB,
     BASICS,
     ALLOWANCES,
     EBASIC,
     EDA,
     EHRA,
     ETA,
     EEA,
     EMEDIREMB,
     EBASICS,
     EALLOWANCES,
     ECASHSAL,
     ECHQSAL,
     PFGROSS,
     ESICGROSS,
     COMPEPF_PER,
     COMPEPS_PER,
     COMPPF_PER,
     COMP_EPF,
     COMP_EPS,
     COMP_PF,
     COMPESIC_PER,
     COMPESIC,
     EMPPF_PER,
     EMPPF,
     EMPESIC_PER,
     EMPESIC,
     PT,
     EMPLWF,
     COMPLWF,
     TOTDEDUCT,
     ADVANCE,
     LOANEMI,
     INCENTIVE,
     OTMIN,
     OTPER,
     OTAMT,
     PENALTY,
     OTHER_PENALTY,
     NETCHQSAL,
     NETCASHSAL,
     NETPAY,
     ACNO,
     BANKNM,
     PAYMODE,
     TDS,
     SURCHARGE,
     CESS,
     TOTTDS,
     EUSER,
     ETERMINAL,
     EDATE,
     EIP,
     DML_FLAG,
     DML_USER,
     DML_DATE,
     DML_TERMINAL,
     DML_IP)
  VALUES
    (:OLD.COMPCD,
     :OLD.EMPCD,
     :OLD.SALTYPE,
     :OLD.SALMONTH,
     DECODE(:OLD.PAYDATE, :NEW.PAYDATE, NULL, :OLD.PAYDATE),
     DECODE(:OLD.WD, :NEW.WD, NULL, :OLD.WD),
     DECODE(:OLD.PD, :NEW.PD, NULL, :OLD.PD),
     DECODE(:OLD.ATTEN_PD, :NEW.ATTEN_PD, NULL, :OLD.ATTEN_PD),
     DECODE(:OLD.TD, :NEW.TD, NULL, :OLD.TD),
     DECODE(:OLD.REALSAL, :NEW.REALSAL, NULL, :OLD.REALSAL),
     DECODE(:OLD.CASHSAL, :NEW.CASHSAL, NULL, :OLD.CASHSAL),
     DECODE(:OLD.CHQSAL, :NEW.CHQSAL, NULL, :OLD.CHQSAL),
     DECODE(:OLD.PERDAYSAL, :NEW.PERDAYSAL, NULL, :OLD.PERDAYSAL),
     DECODE(:OLD.IMPORTSAL, :NEW.IMPORTSAL, NULL, :OLD.IMPORTSAL),
     DECODE(:OLD.BASIC, :NEW.BASIC, NULL, :OLD.BASIC),
     DECODE(:OLD.DA, :NEW.DA, NULL, :OLD.DA),
     DECODE(:OLD.HRA, :NEW.HRA, NULL, :OLD.HRA),
     DECODE(:OLD.TA, :NEW.TA, NULL, :OLD.TA),
     DECODE(:OLD.EA, :NEW.EA, NULL, :OLD.EA),
     DECODE(:OLD.MEDIREMB, :NEW.MEDIREMB, NULL, :OLD.MEDIREMB),
     DECODE(:OLD.BASICS, :NEW.BASICS, NULL, :OLD.BASICS),
     DECODE(:OLD.ALLOWANCES, :NEW.ALLOWANCES, NULL, :OLD.ALLOWANCES),
     DECODE(:OLD.EBASIC, :NEW.EBASIC, NULL, :OLD.EBASIC),
     DECODE(:OLD.EDA, :NEW.EDA, NULL, :OLD.EDA),
     DECODE(:OLD.EHRA, :NEW.EHRA, NULL, :OLD.EHRA),
     DECODE(:OLD.ETA, :NEW.ETA, NULL, :OLD.ETA),
     DECODE(:OLD.EEA, :NEW.EEA, NULL, :OLD.EEA),
     DECODE(:OLD.EMEDIREMB, :NEW.EMEDIREMB, NULL, :OLD.EMEDIREMB),
     DECODE(:OLD.EBASICS, :NEW.EBASICS, NULL, :OLD.EBASICS),
     DECODE(:OLD.EALLOWANCES, :NEW.EALLOWANCES, NULL, :OLD.EALLOWANCES),
     DECODE(:OLD.ECASHSAL, :NEW.ECASHSAL, NULL, :OLD.ECASHSAL),
     DECODE(:OLD.ECHQSAL, :NEW.ECHQSAL, NULL, :OLD.ECHQSAL),
     DECODE(:OLD.PFGROSS, :NEW.PFGROSS, NULL, :OLD.PFGROSS),
     DECODE(:OLD.ESICGROSS, :NEW.ESICGROSS, NULL, :OLD.ESICGROSS),
     DECODE(:OLD.COMPEPF_PER, :NEW.COMPEPF_PER, NULL, :OLD.COMPEPF_PER),
     DECODE(:OLD.COMPEPS_PER, :NEW.COMPEPS_PER, NULL, :OLD.COMPEPS_PER),
     DECODE(:OLD.COMPPF_PER, :NEW.COMPPF_PER, NULL, :OLD.COMPPF_PER),
     DECODE(:OLD.COMP_EPF, :NEW.COMP_EPF, NULL, :OLD.COMP_EPF),
     DECODE(:OLD.COMP_EPS, :NEW.COMP_EPS, NULL, :OLD.COMP_EPS),
     DECODE(:OLD.COMP_PF, :NEW.COMP_PF, NULL, :OLD.COMP_PF),
     DECODE(:OLD.COMPESIC_PER, :NEW.COMPESIC_PER, NULL, :OLD.COMPESIC_PER),
     DECODE(:OLD.COMPESIC, :NEW.COMPESIC, NULL, :OLD.COMPESIC),
     DECODE(:OLD.EMPPF_PER, :NEW.EMPPF_PER, NULL, :OLD.EMPPF_PER),
     DECODE(:OLD.EMPPF, :NEW.EMPPF, NULL, :OLD.EMPPF),
     DECODE(:OLD.EMPESIC_PER, :NEW.EMPESIC_PER, NULL, :OLD.EMPESIC_PER),
     DECODE(:OLD.EMPESIC, :NEW.EMPESIC, NULL, :OLD.EMPESIC),
     DECODE(:OLD.PT, :NEW.PT, NULL, :OLD.PT),
     DECODE(:OLD.EMPLWF, :NEW.EMPLWF, NULL, :OLD.EMPLWF),
     DECODE(:OLD.COMPLWF, :NEW.COMPLWF, NULL, :OLD.COMPLWF),
     DECODE(:OLD.TOTDEDUCT, :NEW.TOTDEDUCT, NULL, :OLD.TOTDEDUCT),
     DECODE(:OLD.ADVANCE, :NEW.ADVANCE, NULL, :OLD.ADVANCE),
     DECODE(:OLD.LOANEMI, :NEW.LOANEMI, NULL, :OLD.LOANEMI),
     DECODE(:OLD.INCENTIVE, :NEW.INCENTIVE, NULL, :OLD.INCENTIVE),
     DECODE(:OLD.OTMIN, :NEW.OTMIN, NULL, :OLD.OTMIN),
     DECODE(:OLD.OTPER, :NEW.OTPER, NULL, :OLD.OTPER),
     DECODE(:OLD.OTAMT, :NEW.OTAMT, NULL, :OLD.OTAMT),
     DECODE(:OLD.PENALTY, :NEW.PENALTY, NULL, :OLD.PENALTY),
     DECODE(:OLD.OTHER_PENALTY, :NEW.OTHER_PENALTY, NULL, :OLD.OTHER_PENALTY),
     DECODE(:OLD.NETCHQSAL, :NEW.NETCHQSAL, NULL, :OLD.NETCHQSAL),
     DECODE(:OLD.NETCASHSAL, :NEW.NETCASHSAL, NULL, :OLD.NETCASHSAL),
     DECODE(:OLD.NETPAY, :NEW.NETPAY, NULL, :OLD.NETPAY),
     DECODE(:OLD.ACNO, :NEW.ACNO, NULL, :OLD.ACNO),
     DECODE(:OLD.BANKNM, :NEW.BANKNM, NULL, :OLD.BANKNM),
     DECODE(:OLD.PAYMODE, :NEW.PAYMODE, NULL, :OLD.PAYMODE),
     DECODE(:OLD.TDS, :NEW.TDS, NULL, :OLD.TDS),
     DECODE(:OLD.SURCHARGE, :NEW.SURCHARGE, NULL, :OLD.SURCHARGE),
     DECODE(:OLD.CESS, :NEW.CESS, NULL, :OLD.CESS),
     DECODE(:OLD.TOTTDS, :NEW.TOTTDS, NULL, :OLD.TOTTDS),
     :OLD.EUSER,
     :OLD.ETERMINAL,
     :OLD.EDATE,
     :OLD.EIP,
     L_OPERATION,
     PKG_MAS_DML.TRG_USER,
     SYSDATE,
     PKG_MAS_DML.TRG_TERMINAL,
     PKG_MAS_DML.TRG_IP
     );

END AUD_SALTRAN;


--07/12/2017
-- EMPMAS HIS TRIGGER
CREATE OR REPLACE TRIGGER TRG_AU_EMPMAS
  AFTER UPDATE ON EMPMAS
  FOR EACH ROW
DECLARE
  V_TERMINAL VARCHAR2(30);
  V_IP       VARCHAR2(50);
BEGIN
  SELECT SYS_CONTEXT('USERENV', 'TERMINAL') INTO V_TERMINAL FROM DUAL;
  SELECT SYS_CONTEXT('USERENV', 'IP_ADDRESS') INTO V_IP FROM DUAL;

  INSERT INTO HIS_EMPMAS
    (COMPCD,
     EMPCD,
     EMPNO,
     EMPNM,
     SHORTNM,
     DESGCD,
     DEPTCD,
     JOINDATE,
     BIRTHDATE,
     GENDER,
     BLOODGROUP,
     MOTHERTOUNGE,
     CASTE,
     NATIVEPLACE,
     ADD1,
     ADD2,
     ADD3,
     ADDRESS,
     TELNO,
     PADD1,
     PADD2,
     PADD3,
     PADDRESS,
     PTELNO,
     REFERENCE,
     PREVCOMP,
     EXP,
     STATUS,
     RESIGNDATE,
     REMARKS,
     SALARY_LABOUR,
     DML_FLAG,
     DML_USER,
     DML_DATE,
     DML_TIME,
     DML_TERMINAL,
     DML_IP,
     INTIME,
     OUTTIME,
     D_INTIME,
     D_OUTTIME,
     D_JOINDATE,
     QUALIFICATION,
     NOTARYDATE,
     CITY,
     PCITY,
     PF_FLAG,
     ESIC_FLAG,
     MARITAL_STATUS,
     NO_OF_CHILD,
    -- PHY_DISABILITY,
     BANKNM,
     BANK_BRANCH,
     AADHARNO,
     PANNO,
     PFNO,
     ESICNO,
     BASIC,
     DA,
     HRA,
     EA,
     TA,
     MEDIREMB,
     REALSAL, 
     CUT_LATEMIN,
     PAY_OVERMIN,
     CASHSAL,
     CHQSAL,
     FIRST_NAME,		
     MIDDLE_NAME,		
     LAST_NAME,	
     STATE,			
     --UANNO,			
     HANDICAPPED,		
     SENIOR_CITIZEN,	
     PASSPORTNO
    -- PER_STATE
     )
  VALUES
    (:OLD.COMPCD,
     :OLD.EMPCD,
     :OLD.EMPNO, 
     DECODE(:OLD.EMPNM, :NEW.EMPNM, NULL, :OLD.EMPNM),
     DECODE(:OLD.SHORTNM, :NEW.SHORTNM, NULL, :OLD.SHORTNM),
     DECODE(:OLD.DESGCD, :NEW.DESGCD, NULL, :OLD.DESGCD),
     DECODE(:OLD.DEPTCD, :NEW.DEPTCD, NULL, :OLD.DEPTCD),
     DECODE(:OLD.JOINDATE, :NEW.JOINDATE, NULL, :OLD.JOINDATE),
     DECODE(:OLD.BIRTHDATE, :NEW.BIRTHDATE, NULL, :OLD.BIRTHDATE),
     DECODE(:OLD.GENDER, :NEW.GENDER, NULL, :OLD.GENDER),
     DECODE(:OLD.BLOODGROUP, :NEW.BLOODGROUP, NULL, :OLD.BLOODGROUP),
     DECODE(:OLD.MOTHERTOUNGE, :NEW.MOTHERTOUNGE, NULL, :OLD.MOTHERTOUNGE),
     DECODE(:OLD.CASTE, :NEW.CASTE, NULL, :OLD.CASTE),
     DECODE(:OLD.NATIVEPLACE, :NEW.NATIVEPLACE, NULL, :OLD.NATIVEPLACE),
     DECODE(:OLD.ADD1, :NEW.ADD1, NULL, :OLD.ADD1),
     DECODE(:OLD.ADD2, :NEW.ADD2, NULL, :OLD.ADD2),
     DECODE(:OLD.ADD3, :NEW.ADD3, NULL, :OLD.ADD3),
     DECODE(:OLD.ADDRESS, :NEW.ADDRESS, NULL, :OLD.ADDRESS) ,
     DECODE(:OLD.TELNO, :NEW.TELNO, NULL, :OLD.TELNO) ,
     DECODE(:OLD.PADD1, :NEW.PADD1, NULL, :OLD.PADD1),
     DECODE(:OLD.PADD2, :NEW.PADD2, NULL, :OLD.PADD2),
     DECODE(:OLD.PADD3, :NEW.PADD3, NULL, :OLD.PADD3),
     DECODE(:OLD.PADDRESS, :NEW.PADDRESS, NULL, :OLD.PADDRESS) ,
     DECODE(:OLD.PTELNO, :NEW.PTELNO, NULL, :OLD.PTELNO) ,
     DECODE(:OLD.REFERENCE, :NEW.REFERENCE, NULL, :OLD.REFERENCE) ,
     DECODE(:OLD.PREVCOMP, :NEW.PREVCOMP, NULL, :OLD.PREVCOMP) ,
     DECODE(:OLD.EXP, :NEW.EXP, NULL, :OLD.EXP) ,
     DECODE(:OLD.STATUS, :NEW.STATUS, NULL, :OLD.STATUS) ,
     DECODE(:OLD.RESIGNDATE, :NEW.RESIGNDATE, NULL, :OLD.RESIGNDATE) ,
     DECODE(:OLD.REMARKS, :NEW.REMARKS, NULL, :OLD.REMARKS) ,
     DECODE(:OLD.SALARY_LABOUR, :NEW.SALARY_LABOUR, NULL, :OLD.SALARY_LABOUR) ,
     'UPDATE',
     :NEW.CUSER,
     TRUNC(SYSDATE),
     TO_CHAR(SYSDATE, 'HH24:MI'),
     V_TERMINAL,
     V_IP,
     DECODE(:OLD.INTIME, :NEW.INTIME, NULL, :OLD.INTIME) ,
     DECODE(:OLD.OUTTIME, :NEW.OUTTIME, NULL, :OLD.OUTTIME) ,
     DECODE(:OLD.D_INTIME, :NEW.D_INTIME, NULL, :OLD.D_INTIME) ,
     DECODE(:OLD.D_OUTTIME, :NEW.D_OUTTIME, NULL, :OLD.D_OUTTIME) ,
     DECODE(:OLD.D_JOINDATE, :NEW.D_JOINDATE, NULL, :OLD.D_JOINDATE) ,
     DECODE(:OLD.QUALIFICATION, :NEW.QUALIFICATION, NULL, :NEW.QUALIFICATION) ,
     DECODE(:OLD.NOTARYDATE, :NEW.NOTARYDATE, NULL, :OLD.NOTARYDATE) ,
     DECODE(:OLD.CITY, :NEW.CITY, NULL, :OLD.CITY) ,
     DECODE(:OLD.PCITY, :NEW.PCITY, NULL, :OLD.PCITY) ,
     DECODE(:OLD.PF_FLAG, :NEW.PF_FLAG, NULL, :OLD.PF_FLAG) ,
     DECODE(:OLD.ESIC_FLAG, :NEW.ESIC_FLAG, NULL, :OLD.ESIC_FLAG) ,
     DECODE(:OLD.MARITAL_STATUS, :NEW.MARITAL_STATUS, NULL, :OLD.MARITAL_STATUS) ,
     DECODE(:OLD.NO_OF_CHILD, :NEW.NO_OF_CHILD, NULL, :OLD.NO_OF_CHILD) ,
    -- DECODE(:OLD.PHY_DISABILITY, :NEW.PHY_DISABILITY, NULL, :OLD.PHY_DISABILITY) ,
     DECODE(:OLD.BANKNM, :NEW.BANKNM, NULL, :OLD.BANKNM) ,
     DECODE(:OLD.BANK_BRANCH, :NEW.BANK_BRANCH, NULL, :OLD.BANK_BRANCH) ,
     DECODE(:OLD.AADHARNO, :NEW.AADHARNO, NULL, :OLD.AADHARNO) ,
     DECODE(:OLD.PANNO, :NEW.PANNO, NULL, :OLD.PANNO) ,
     DECODE(:OLD.PFNO, :NEW.PFNO, NULL, :OLD.PFNO) ,
     DECODE(:OLD.ESICNO, :NEW.ESICNO, NULL, :OLD.ESICNO) ,
     DECODE(:OLD.BASIC, :NEW.BASIC, NULL, :OLD.BASIC) ,
     DECODE(:OLD.DA, :NEW.DA, NULL, :OLD.DA) ,
     DECODE(:OLD.HRA, :NEW.HRA, NULL, :OLD.HRA) ,
     DECODE(:OLD.EA, :NEW.EA, NULL, :OLD.EA) ,
     DECODE(:OLD.TA, :NEW.TA, NULL, :OLD.TA) ,
     DECODE(:OLD.MEDIREMB, :NEW.MEDIREMB, NULL, :OLD.MEDIREMB) ,
     DECODE(:OLD.REALSAL, :NEW.REALSAL, NULL, :OLD.REALSAL) ,
     DECODE(:OLD.CUT_LATEMIN, :NEW.CUT_LATEMIN, NULL, :OLD.CUT_LATEMIN) ,
     DECODE(:OLD.PAY_OVERMIN, :NEW.PAY_OVERMIN, NULL, :OLD.PAY_OVERMIN) ,
     DECODE(:OLD.CASHSAL, :NEW.CASHSAL, NULL, :OLD.CASHSAL) ,
     DECODE(:OLD.CHQSAL, :NEW.CHQSAL, NULL, :OLD.CHQSAL) ,
     DECODE(:OLD.FIRST_NAME, :NEW.FIRST_NAME, NULL, :OLD.FIRST_NAME), 
     DECODE(:OLD.MIDDLE_NAME, :NEW.MIDDLE_NAME, NULL, :OLD.MIDDLE_NAME), 
     DECODE(:OLD.LAST_NAME, :NEW.LAST_NAME, NULL, :OLD.LAST_NAME), 
     DECODE(:OLD.STATE, :NEW.STATE, NULL, :OLD.STATE), 
    -- DECODE(:OLD.UANNO, :NEW.UANNO, NULL, :OLD.UANNO), 
     DECODE(:OLD.HANDICAPPED, :NEW.HANDICAPPED, NULL, :OLD.HANDICAPPED), 
     DECODE(:OLD.SENIOR_CITIZEN, :NEW.SENIOR_CITIZEN, NULL, :OLD.SENIOR_CITIZEN), 
     DECODE(:OLD.PASSPORTNO, :NEW.PASSPORTNO, NULL, :OLD.PASSPORTNO)
    -- DECODE(:OLD.PER_STATE, :NEW.PER_STATE, NULL, :OLD.PER_STATE)
     );

END TRG_AU_EMPMAS;


--09/12/2017
--HIS_SALTRAN

CREATE OR REPLACE TRIGGER AUD_SALTRAN AFTER UPDATE OR DELETE ON SALTRAN FOR EACH ROW
DECLARE
    L_OPERATION VARCHAR2(10);
BEGIN
  IF UPDATING THEN
    L_OPERATION := 'UPDATE';
  ELSE
    L_OPERATION := 'DELETE';
  END IF;

   INSERT INTO HIS_SALTRAN
    (COMPCD,
     DEPTCD,
     EMPCD,
     SALTYPE,
     SALMONTH,
     PAYDATE,
     WD,
     PD,
     ATTEN_PD,
     TD,
     REALSAL,
     CASHSAL,
     CHQSAL,
     PERDAYSAL,
     IMPORTSAL,
     BASIC,
     DA,
     HRA,
     TA,
     EA,
     MEDIREMB,
     BASICS,
     ALLOWANCES,
     EBASIC,
     EDA,
     EHRA,
     ETA,
     EEA,
     EMEDIREMB,
     EBASICS,
     EALLOWANCES,
     ECASHSAL,
     ECHQSAL,
     PFGROSS,
     ESICGROSS,
     COMPEPF_PER,
     COMPEPS_PER,
     COMPPF_PER,
     COMP_EPF,
     COMP_EPS,
     COMP_PF,
     COMPESIC_PER,
     COMPESIC,
     EMPPF_PER,
     EMPPF,
     EMPESIC_PER,
     EMPESIC,
     PT,
     EMPLWF,
     COMPLWF,
     TOTDEDUCT,
     ADVANCE,
     LOANEMI,
     INCENTIVE,
     OTMIN,
     OTPER,
     OTAMT,
     PENALTY,
     OTHER_PENALTY,
     NETCHQSAL,
     NETCASHSAL,
     NETPAY,
     ACNO,
     BANKNM,
     PAYMODE,
     TDS,
     SURCHARGE,
     CESS,
     TOTTDS,
     EMP_TYPE,
     EUSER,
     ETERMINAL,
     EDATE,
     EIP,
     DML_FLAG,
     DML_USER,
     DML_DATE,
     DML_TERMINAL,
     DML_IP)
  VALUES
    (:OLD.COMPCD,
     :OLD.DEPTCD,
     :OLD.EMPCD,
     :OLD.SALTYPE,
     :OLD.SALMONTH,
     DECODE(:OLD.PAYDATE, :NEW.PAYDATE, NULL, :OLD.PAYDATE),
     DECODE(:OLD.WD, :NEW.WD, NULL, :OLD.WD),
     DECODE(:OLD.PD, :NEW.PD, NULL, :OLD.PD),
     DECODE(:OLD.ATTEN_PD, :NEW.ATTEN_PD, NULL, :OLD.ATTEN_PD),
     DECODE(:OLD.TD, :NEW.TD, NULL, :OLD.TD),
     DECODE(:OLD.REALSAL, :NEW.REALSAL, NULL, :OLD.REALSAL),
     DECODE(:OLD.CASHSAL, :NEW.CASHSAL, NULL, :OLD.CASHSAL),
     DECODE(:OLD.CHQSAL, :NEW.CHQSAL, NULL, :OLD.CHQSAL),
     DECODE(:OLD.PERDAYSAL, :NEW.PERDAYSAL, NULL, :OLD.PERDAYSAL),
     DECODE(:OLD.IMPORTSAL, :NEW.IMPORTSAL, NULL, :OLD.IMPORTSAL),
     DECODE(:OLD.BASIC, :NEW.BASIC, NULL, :OLD.BASIC),
     DECODE(:OLD.DA, :NEW.DA, NULL, :OLD.DA),
     DECODE(:OLD.HRA, :NEW.HRA, NULL, :OLD.HRA),
     DECODE(:OLD.TA, :NEW.TA, NULL, :OLD.TA),
     DECODE(:OLD.EA, :NEW.EA, NULL, :OLD.EA),
     DECODE(:OLD.MEDIREMB, :NEW.MEDIREMB, NULL, :OLD.MEDIREMB),
     DECODE(:OLD.BASICS, :NEW.BASICS, NULL, :OLD.BASICS),
     DECODE(:OLD.ALLOWANCES, :NEW.ALLOWANCES, NULL, :OLD.ALLOWANCES),
     DECODE(:OLD.EBASIC, :NEW.EBASIC, NULL, :OLD.EBASIC),
     DECODE(:OLD.EDA, :NEW.EDA, NULL, :OLD.EDA),
     DECODE(:OLD.EHRA, :NEW.EHRA, NULL, :OLD.EHRA),
     DECODE(:OLD.ETA, :NEW.ETA, NULL, :OLD.ETA),
     DECODE(:OLD.EEA, :NEW.EEA, NULL, :OLD.EEA),
     DECODE(:OLD.EMEDIREMB, :NEW.EMEDIREMB, NULL, :OLD.EMEDIREMB),
     DECODE(:OLD.EBASICS, :NEW.EBASICS, NULL, :OLD.EBASICS),
     DECODE(:OLD.EALLOWANCES, :NEW.EALLOWANCES, NULL, :OLD.EALLOWANCES),
     DECODE(:OLD.ECASHSAL, :NEW.ECASHSAL, NULL, :OLD.ECASHSAL),
     DECODE(:OLD.ECHQSAL, :NEW.ECHQSAL, NULL, :OLD.ECHQSAL),
     DECODE(:OLD.PFGROSS, :NEW.PFGROSS, NULL, :OLD.PFGROSS),
     DECODE(:OLD.ESICGROSS, :NEW.ESICGROSS, NULL, :OLD.ESICGROSS),
     DECODE(:OLD.COMPEPF_PER, :NEW.COMPEPF_PER, NULL, :OLD.COMPEPF_PER),
     DECODE(:OLD.COMPEPS_PER, :NEW.COMPEPS_PER, NULL, :OLD.COMPEPS_PER),
     DECODE(:OLD.COMPPF_PER, :NEW.COMPPF_PER, NULL, :OLD.COMPPF_PER),
     DECODE(:OLD.COMP_EPF, :NEW.COMP_EPF, NULL, :OLD.COMP_EPF),
     DECODE(:OLD.COMP_EPS, :NEW.COMP_EPS, NULL, :OLD.COMP_EPS),
     DECODE(:OLD.COMP_PF, :NEW.COMP_PF, NULL, :OLD.COMP_PF),
     DECODE(:OLD.COMPESIC_PER, :NEW.COMPESIC_PER, NULL, :OLD.COMPESIC_PER),
     DECODE(:OLD.COMPESIC, :NEW.COMPESIC, NULL, :OLD.COMPESIC),
     DECODE(:OLD.EMPPF_PER, :NEW.EMPPF_PER, NULL, :OLD.EMPPF_PER),
     DECODE(:OLD.EMPPF, :NEW.EMPPF, NULL, :OLD.EMPPF),
     DECODE(:OLD.EMPESIC_PER, :NEW.EMPESIC_PER, NULL, :OLD.EMPESIC_PER),
     DECODE(:OLD.EMPESIC, :NEW.EMPESIC, NULL, :OLD.EMPESIC),
     DECODE(:OLD.PT, :NEW.PT, NULL, :OLD.PT),
     DECODE(:OLD.EMPLWF, :NEW.EMPLWF, NULL, :OLD.EMPLWF),
     DECODE(:OLD.COMPLWF, :NEW.COMPLWF, NULL, :OLD.COMPLWF),
     DECODE(:OLD.TOTDEDUCT, :NEW.TOTDEDUCT, NULL, :OLD.TOTDEDUCT),
     DECODE(:OLD.ADVANCE, :NEW.ADVANCE, NULL, :OLD.ADVANCE),
     DECODE(:OLD.LOANEMI, :NEW.LOANEMI, NULL, :OLD.LOANEMI),
     DECODE(:OLD.INCENTIVE, :NEW.INCENTIVE, NULL, :OLD.INCENTIVE),
     DECODE(:OLD.OTMIN, :NEW.OTMIN, NULL, :OLD.OTMIN),
     DECODE(:OLD.OTPER, :NEW.OTPER, NULL, :OLD.OTPER),
     DECODE(:OLD.OTAMT, :NEW.OTAMT, NULL, :OLD.OTAMT),
     DECODE(:OLD.PENALTY, :NEW.PENALTY, NULL, :OLD.PENALTY),
     DECODE(:OLD.OTHER_PENALTY, :NEW.OTHER_PENALTY, NULL, :OLD.OTHER_PENALTY),
     DECODE(:OLD.NETCHQSAL, :NEW.NETCHQSAL, NULL, :OLD.NETCHQSAL),
     DECODE(:OLD.NETCASHSAL, :NEW.NETCASHSAL, NULL, :OLD.NETCASHSAL),
     DECODE(:OLD.NETPAY, :NEW.NETPAY, NULL, :OLD.NETPAY),
     DECODE(:OLD.ACNO, :NEW.ACNO, NULL, :OLD.ACNO),
     DECODE(:OLD.BANKNM, :NEW.BANKNM, NULL, :OLD.BANKNM),
     DECODE(:OLD.PAYMODE, :NEW.PAYMODE, NULL, :OLD.PAYMODE),
     DECODE(:OLD.TDS, :NEW.TDS, NULL, :OLD.TDS),
     DECODE(:OLD.SURCHARGE, :NEW.SURCHARGE, NULL, :OLD.SURCHARGE),
     DECODE(:OLD.CESS, :NEW.CESS, NULL, :OLD.CESS),
     DECODE(:OLD.TOTTDS, :NEW.TOTTDS, NULL, :OLD.TOTTDS),
     :OLD.EMP_TYPE,
     :OLD.EUSER,
     :OLD.ETERMINAL,
     :OLD.EDATE,
     :OLD.EIP,
     L_OPERATION,
     PKG_MAS_DML.TRG_USER,
     SYSDATE,
     PKG_MAS_DML.TRG_TERMINAL,
     PKG_MAS_DML.TRG_IP
     );

END AUD_SALTRAN;
--
