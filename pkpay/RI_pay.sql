----------------------------------------------------------------------------------------------------
-- PAYROLL
-- CREATED BY PARESH ON 25/09/2024
----------------------------------------------------------------------------------------------------

CONNECT SYSTEM@ORCL/PK

CREATE TABLESPACE TS_PAY DATAFILE 'D:\ORACLE\ORADATA\ORCL\PAY_01.DBF' SIZE 2000M AUTOEXTEND ON NEXT 20M MAXSIZE 5000M;

--MY LOCAL PC
--C:\app\Administrator\oradata\orcl


--## NEW USER (IF YOU ARE IMPORTING DAT FILE USING IMPDP THEN NO NEED TO CREATE USER, USER WILL BE CREATED AUTO)
CREATE USER PAY IDENTIFIED BY ORACLEAPEX DEFAULT TABLESPACE TS_PAY TEMPORARY TABLESPACE TEMP PROFILE DEFAULT;
GRANT CONNECT,RESOURCE,IMP_FULL_DATABASE,EXP_FULL_DATABASE TO PAY;
GRANT DBA TO PAY;
GRANT CREATE ANY TABLE TO PAY;
--
 
--##-----------------------------------------------------------------------------------------------------------------------------------------##
--## HELP
 --IMPORT WITHOUT CREATING USERNAME 
 IMPDP SYSTEM/Manager_123@ORCL SCHEMAS=RI DIRECTORY = ORACLE_IMP_EXP DUMPFILE=HT_16062022.DMP LOGFILE=IMP_HT_16062022.LOG 
 --EXPORT USER
EXPDP USERID=RI/ORACLEAPEX@PORCL DUMPFILE=RI_27012024.DMP DIRECTORY=ORACLE_IMP_EXP LOGFILE=RI_27012024.LOG DIRECT=Y

--IMPORT SCRIPT FOR KE 
@RUN-CMD-D:\
CD D:\ORACLE\PRODUCT\11.2.0\DBHOME_1\BIN>
IMPDP PAY/ORACLEAPEX@ORCL DIRECTORY = ORACLE_IMP_EXP DUMPFILE=PAY.DMP LOGFILE=IMP_PAY.LOG 
--REMAP_SCHEMA=RI:KE REMAP_TABLESPACE=RI_TBL:TS_KE

----------------------------------------------------------------------------------------------------


--EMPMAS
E - EMPLOYEE (ON ROLL EMP)
P - PROBATION
T - TRAINEE AND TRIAL
V - VISITOR
R - PARTNER
M - MACHINE (= CHIRAG)

----------------------------------------------------------------------------------------------------

--MODULE DONE
--DROP TABLE COMPMAS;
CREATE TABLE COMPMAS
(
COMPCD          NUMBER(5),
FINYR           VARCHAR2(4),
COMPNM          VARCHAR2(50),
SHORTNM         VARCHAR2(30),
ADD1            VARCHAR2(80),
ADD2            VARCHAR2(50),
ADD3            VARCHAR2(50),
CITY            VARCHAR2(50),
STATE			VARCHAR2(20),
STATE_CODE		VARCHAR2(5),
CONTACTNO		VARCHAR2(50),
EMAILID         VARCHAR2(50),
--FAX             VARCHAR2(50),
--ITAXNO          VARCHAR2(50),
--CSTNO           VARCHAR2(50),
--WARDNO          VARCHAR2(50),
PHONENO     	VARCHAR2(30),	--LANDLINE
GSTNO           VARCHAR2(50),
PANNO           VARCHAR2(20),
--TANNO           VARCHAR2(20),
TDSNO           VARCHAR2(80),
TDSNO2          VARCHAR2(80),
TDSNO3          VARCHAR2(80),
TDSNO4          VARCHAR2(80),
--PRINTCOMPNM     VARCHAR2(80),
--PRINTADD        VARCHAR2(180),
ESICNO	   	 	VARCHAR2(30),
ESICCODENO      VARCHAR2(30),
ESICBRANCH      VARCHAR2(30),
PFACNO          VARCHAR2(20),
--PRINTCOMPNM_GUJ VARCHAR2(80),
--PRINTADD_GUJ    VARCHAR2(180),
--UNITNM          VARCHAR2(20),
--TEA_TIME        NUMBER(10),
--LUNCH_TIME      NUMBER(10),
--BRANCH          VARCHAR2(20),
--PRESENT_PER_MIN NUMBER(5),
--PRESENT_PER_MAX NUMBER(5)
CONSTRAINT PK_COMPMAS_COMPCD 	PRIMARY KEY (COMPCD),
CONSTRAINT UN_COMPMAS_COMPNM 	UNIQUE (COMPNM),
CONSTRAINT CK_COMPMAS_SHORTNM	CHECK (SHORTNM IS NOT NULL)
);


DROP TABLE HIS_COMPMAS;
CREATE TABLE HIS_COMPMAS
(
COMPCD     		NUMBER(5),
FINYR      		VARCHAR2(4),
COMPNM     		VARCHAR2(50),
SHORTNM    		VARCHAR2(30),
ADD1       		VARCHAR2(80),
ADD2       		VARCHAR2(50),
ADD3       		VARCHAR2(50),
CITY       		VARCHAR2(50),
STATE      		VARCHAR2(20),
STATE_CODE 		VARCHAR2(5),
CONTACTNO  		VARCHAR2(50),
EMAILID    		VARCHAR2(50),
PHONENO    		VARCHAR2(30),
GSTNO      		VARCHAR2(50),
PANNO      		VARCHAR2(20),
TDSNO      		VARCHAR2(80),
TDSNO2     		VARCHAR2(80),
TDSNO3     		VARCHAR2(80),
TDSNO4     		VARCHAR2(80),
ESICNO     		VARCHAR2(30),
ESICCODENO 		VARCHAR2(30),
ESICBRANCH 		VARCHAR2(30),
PFACNO     		VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);


--DROP TABLE COMPDET;
CREATE TABLE COMPDET
(
COMPCD   	NUMBER(5),
DIRECTOR 	VARCHAR2(80),	
FATHERNM 	VARCHAR2(80),	--MAY BE FOR FORM16
DESGNM   	VARCHAR2(20),	--PARTNER/DIRECTOR
EUSER		VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
ETERMINAL	VARCHAR2(20),
CUSER		VARCHAR2(20),
CONSTRAINT PK_COMPDET 			PRIMARY KEY (COMPCD, DIRECTOR),
CONSTRAINT FK_COMPDET_COMPCD 	FOREIGN KEY (COMPCD) REFERENCES COMPMAS (COMPCD),
CONSTRAINT NN_COMPDET_FATHERNM 	CHECK (FATHERNM IS NOT NULL),
CONSTRAINT NN_COMPDET_EUSER		CHECK (EUSER IS NOT NULL)
);

--DROP TABLE HIS_COMPDET;
CREATE TABLE HIS_COMPDET
(
COMPCD   		NUMBER(5),
DIRECTOR 		VARCHAR2(80),	
FATHERNM 		VARCHAR2(80),	--MAY BE FOR FORM16
DESGNM   		VARCHAR2(20),	--PARTNER/DIRECTOR
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
CUSER			VARCHAR2(20),
DML_FLAG		VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);


--DROP TABLE FYMAS;
CREATE TABLE FYMAS
(
COMPCD    		NUMBER(5),
FYCD      		NUMBER(5),
STARTDATE   	DATE,
ENDDATE     	DATE,
ASSMT_FYEAR 	NUMBER(4),
ASSMT_TYEAR 	NUMBER(4),
FYEAR			NUMBER(4),
TYEAR			NUMBER(4),
EUSER			VARCHAR2(20),
EDATE			DATE DEFAULT SYSDATE,
ETERMINAL		VARCHAR2(20),
CUSER			VARCHAR2(20),
CONSTRAINT PK_FYMAS_COFYCD 		PRIMARY KEY (COMPCD, FYCD),
CONSTRAINT FK_FYMAS_COMPCD 		FOREIGN KEY (COMPCD) REFERENCES COMPMAS (COMPCD),
CONSTRAINT NN_FYMAS_STARTDATE 	CHECK (STARTDATE IS NOT NULL),
CONSTRAINT NN_FYMAS_ENDDATE  	CHECK (ENDDATE IS NOT NULL)
);


--DROP TABLE LOG_LOGIN_USER;
CREATE TABLE LOG_LOGIN_USER
(
LOGIN_DATE   DATE,
LOGIN_PROG   VARCHAR2(20),
ATTEMPT_USER VARCHAR2(20),
ATTEMPT_PASS VARCHAR2(20),
ATTEMPT_FLAG VARCHAR2(20),
MACHINENM    VARCHAR2(20),
MACHINEIP    VARCHAR2(15),
MSG          VARCHAR2(50)
);

--DROP TABLE LOG_SOFT_USAGE;
CREATE TABLE LOG_SOFT_USAGE
(
USERNAME     VARCHAR2(20),
EMPCD        VARCHAR2(6),
RUNDATE      DATE,
MACHINENM    VARCHAR2(20),
MACHINEIP    VARCHAR2(20),
MENUCD       VARCHAR2(10),
MENUGROUP    VARCHAR2(40),
MENUNM       VARCHAR2(60),
CONSTRAINT NN_LOG_SOFT_MENUCD   CHECK (MENUCD IS NOT NULL),
CONSTRAINT NN_LOG_SOFT_RUNDATE  CHECK (RUNDATE IS NOT NULL),
CONSTRAINT NN_LOG_SOFT_USERNAME CHECK (USERNAME IS NOT NULL)
);

/* --old
CREATE TABLE LOG_SOFT_USAGE
(
MACHINENM 	VARCHAR2(20),
MACHINEIP 	VARCHAR2(20),
USERNAME  	VARCHAR2(20),
RUNDATE   	DATE,
--LOCATION  	VARCHAR2(20),
MENUCD    	VARCHAR2(10),
MENUGROUP 	VARCHAR2(40),
MENUNM    	VARCHAR2(50),
--MENUFLAG  	VARCHAR2(10),
EMPCD     	VARCHAR2(6),
CONSTRAINT NN_LOG_SOFT_MENUCD  	CHECK (MENUCD IS NOT NULL),
CONSTRAINT NN_LOG_SOFT_RUNDATE  CHECK (RUNDATE IS NOT NULL)
);
*/

--MODULE DONE
--DROP TABLE USERMAS;
CREATE TABLE USERMAS
(
USERNAME	VARCHAR2(20),
PASSWORD    VARCHAR2(10),
USERLEVEL	VARCHAR2(20),
STATUS      VARCHAR2(1),
EUSER      	VARCHAR2(20),
ETERMINAL   VARCHAR2(10),
EDATE		DATE DEFAULT SYSDATE,
CUSER      	VARCHAR2(20),
CONSTRAINT PK_USERMAS_USERCD PRIMARY KEY (USERNAME),
CONSTRAINT NN_USERMAS_EUSER CHECK (EUSER IS NOT NULL)
);


--DROP TABLE HIS_USERMAS;
CREATE TABLE HIS_USERMAS
(
USERNAME		VARCHAR2(20),
PASSWORD    	VARCHAR2(10),
USERLEVEL		VARCHAR2(20),
STATUS      	VARCHAR2(1),
EUSER      		VARCHAR2(20),
ETERMINAL   	VARCHAR2(10),
EDATE			DATE,
CUSER      		VARCHAR2(20),
DML_FLAG		VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);

--MODULE DONE
--DROP TABLE MENUMAS;
CREATE TABLE MENUMAS
(
MENUCD       VARCHAR2(20),
MENUNM       VARCHAR2(50),
MENUGROUP    VARCHAR2(30),
INSERTABLE   VARCHAR2(1),
UPDATEABLE   VARCHAR2(1),
DELETEABLE   VARCHAR2(1),
ORDMENU      VARCHAR2(10),
ORDGROUP     NUMBER(5,2),
EDATE        DATE DEFAULT SYSDATE,
EUSER        VARCHAR2(20),
WEBMENU      VARCHAR2(1),
PAGENM       VARCHAR2(50),
MENUNM_LABEL VARCHAR2(50),
CONSTRAINT PK_MENUMAS_MENUCD PRIMARY KEY (MENUCD),
CONSTRAINT UQ_MENUMAS_MENUNM UNIQUE (MENUGROUP, MENUNM)
);

--DROP TABLE USERMENU;
CREATE TABLE USERMENU
(
USERNAME       	VARCHAR2(15),
MENUCD         	VARCHAR2(10),
STATUS         	VARCHAR2(1),
INSERT_ALLOWED 	VARCHAR2(1),
UPDATE_ALLOWED 	VARCHAR2(1),
DELETE_ALLOWED 	VARCHAR2(1),
EDATE			DATE DEFAULT SYSDATE,
CONSTRAINT PK_USERMENU_MENUCD PRIMARY KEY (USERNAME, MENUCD),
CONSTRAINT FK_USERMENU_MENUCD FOREIGN KEY (MENUCD)  REFERENCES MENUMAS (MENUCD),
CONSTRAINT FK_USERMENU_USERNAME FOREIGN KEY (USERNAME) REFERENCES USERMAS (USERNAME),
CONSTRAINT CH_USERMENU_STATUS CHECK (STATUS IN ('Y','N')),
CONSTRAINT NN_USERMENU_STATUS CHECK (STATUS IS NOT NULL)
);


--DROP TABLE HIS_USERMENU;
CREATE TABLE HIS_USERMENU
(
USERNAME       VARCHAR2(20),
MENUCD         VARCHAR2(10),
INSERT_ALLOWED VARCHAR2(1),
UPDATE_ALLOWED VARCHAR2(1),
DELETE_ALLOWED VARCHAR2(1),
DML_FLAG       VARCHAR2(10),
DML_USER       VARCHAR2(20),
DML_DATE       DATE,
DML_TERMINAL   VARCHAR2(20)
) ;


--DROP TABLE GOVT_RULES;
CREATE TABLE GOVT_RULES
(
COMPCD						NUMBER(3),		--
--FYCD                		NUMBER(5),	
FMONTH						VARCHAR2(6),	--INSTEAD OF FYCD - PK -LETS SEE
TMONTH						VARCHAR2(6),	--	
BASIC_PCT					NUMBER(5,2),	--SALARY SLAB - % OF REALSAL
DA_PCT						NUMBER(5,2),	--SALARY SLAB - % OF REALSAL
PF_LIMIT					NUMBER(10),		--ON EBASIC + EDA
PF_LIMIT_FOR_HANDICAPPED	NUMBER(10),		--ON EBASIC + EDA (21000 ON 40% DISABILITY)
EMP_PF_PCT					NUMBER(7,3),	--TOTAL OF EMP_PF_PER (12%)
COMP_EPF_PCT				NUMBER(7,3),	--EMPLOYEE PROVIDENT FUND
COMP_EPS_PCT				NUMBER(7,3),	--EMPLOYE PENSION SCHEME
ESIC_LIMIT					NUMBER(10),		--ON GROSS SALARY
ESIC_LIMIT_FOR_HANDICAPPED	NUMBER(10),		--ON GROSS SALARY (25000 ON 40% DISABILITY) 
EMP_ESIC_PCT				NUMBER(7,3),
COMP_ESIC_PCT				NUMBER(7,3),
EMP_LWF						NUMBER(3),		--EMPLOYEE LABOUR WELFARE FUND - DEDUCT FROM EMP_EARNINGS
COMP_LWF					NUMBER(3),		--COMPANY LABOUR WELFARE FUND 
WELFARE_FUND_MONTH1			VARCHAR2(3),	--JUNE
WELFARE_FUND_MONTH2			VARCHAR2(3),	--DECEMBER	
PF_SENIOR_CITIZEN_AGE		NUMBER(3),		--60
PT_SENIOR_CITIZEN_AGE		NUMBER(3),		--65
IT_SENIOR_CITIZEN_AGE		NUMBER(3),		--60
PF_ADMIN_COST_PCT			NUMBER(7,3),	--0.65% (ON EBASIC + EDA)
PF_EDLI_PCT					NUMBER(7,3),	--0.50% (ON EBASIC + EDA)	--DEPOSIT LINKED INSURANCE SCHEME
DISABILITY_PCT				NUMBER(5),		--
WORK_PERMIT_AGE				NUMBER(2),
CESS_PCT            		NUMBER(7,3),
TA_LIMIT_16         		NUMBER(8),
EA_LIMIT_16         		NUMBER(8),
MEDI_LIMIT_16       		NUMBER(8),
DED_TOTAL_16        		NUMBER(10,2),
SURCHARGE_PCT       		NUMBER(5,2),
SURCHARGE_LIMIT     		NUMBER(12,2),
BONUSQUALAMT        		NUMBER(10,2),
BONUS_PCT           		NUMBER(7,3),
BONUS_LIMIT         		NUMBER(10,2),
HRA_PER_OF_BASIC_DA 		NUMBER(5,2),
MAX_EA_LIMIT_16     		NUMBER(5),
PCT_OF_HRA_RECEIPTS 		NUMBER(7,3)
);


/*
INSERT INTO GOVT_RULES (COMPCD,BASIC_PER,DA_PER,PF_LIMIT,EMP_PF_PER,COMP_EPF_PER,COMP_EPS_PER,ESIC_LIMIT,
						EMP_ESIC_PER,COMP_ESIC_PER,EMP_LABOUR_WELFARE_FUND,COMP_LABOUR_WELFARE_FUND,PF_SENIOR_CITIZEN_AGE,PT_SENIOR_CITIZEN_AGE,IT_SENIOR_CITIZEN_AGE,PF_ADMIN_COST_PER,PF_EDLI_PER,
						PF_LIMIT_FOR_HANDICAPPED,ESIC_LIMIT_FOR_HANDICAPPED,WORK_PERMIT_AGE,DISABILITY_PER,
						WELFARE_FUND_MONTH1,WELFARE_FUND_MONTH2
						)
				VALUES (1,67,33,15000,12,3.67,8.33,21000,1.75,4.75,6,12,58,65,60,.65,.50,21000,25000,18,40,
						'JUN','DEC');
COMMIT;
*/

--ESIC NA CALCULATION MA EMP NOV MAHINA MA JOIN THAY NE JAN MA ENI SALARY VADHI NE ESIC LIMIT NI BAHAR NIKDI JAY 
--  TO PAN 'MAR' MONTH SUDHI ESIC KAPASE
--HANDICAPPED NA CASE MA JOINING NA NEXT 3 YEAR SUDHI COMP NU ESIC NU AMT CENTRAL GOVT PAID KARSE


--FOR HIS_GOVT_RULES;
DML_FLAG	  				VARCHAR2(20),
DML_USER	  				VARCHAR2(30),
DML_DATE	  				DATE,
DML_TERMINAL  				VARCHAR2(20), 	
DML_IP	    				VARCHAR2(30)

--MODULE DONE
DROP TABLE FLOORMAS;
CREATE TABLE FLOORMAS
(
ORDFLOOR	NUMBER(5),
FLOORCD 	NUMBER(5),
FLOORNM 	VARCHAR2(20),
STATUS  	VARCHAR2(1),
EUSER		VARCHAR2(20),
ETERMINAL	VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
CUSER		VARCHAR2(20),
CONSTRAINT PK_FLOORMAS_FLOORCD 	PRIMARY KEY (FLOORCD),
CONSTRAINT UN_FLOORMAS_FLOORNM 	UNIQUE (FLOORNM),
CONSTRAINT NN_FLOORMAS_FLOORNM 	CHECK (FLOORNM IS NOT NULL),
CONSTRAINT NN_FLOORMAS_STATUS 	CHECK (STATUS IS NOT NULL),
CONSTRAINT CK_FLOORMAS_STATUS 	CHECK (STATUS IN ('Y','N')),
CONSTRAINT NN_FLOORMAS_EUSER	CHECK (EUSER IS NOT NULL)
);


DROP TABLE HIS_FLOORMAS;
CREATE TABLE HIS_FLOORMAS
(
ORDFLOOR		NUMBER(5),
FLOORCD 		NUMBER(5),
FLOORNM 		VARCHAR2(20),
STATUS  		VARCHAR2(1),
EUSER			VARCHAR2(20),
ETERMINAL		VARCHAR2(20),
EDATE			DATE,
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);

--MODULE DONE
--DROP TABLE DEPTMAS;
CREATE TABLE DEPTMAS
(
ORDDEPT		NUMBER(5),
DEPTCD  	NUMBER(5),
DEPTNM  	VARCHAR2(100),
--ADDRESS    VARCHAR2(100),
STATUS  	VARCHAR2(1),
EUSER		VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
ETERMINAL	VARCHAR2(20),
CUSER		VARCHAR2(20),
CONSTRAINT PK_DEPTMAS_DEPTCD 	PRIMARY KEY (DEPTCD),
CONSTRAINT UN_DEPTMAS_DEPTNM 	UNIQUE (DEPTNM),
CONSTRAINT NN_DEPTMAS_DEPTNM 	CHECK (DEPTNM IS NOT NULL),
CONSTRAINT NN_DEPTMAS_STATUS 	CHECK (STATUS IS NOT NULL),
CONSTRAINT CK_DEPTMAS_STATUS 	CHECK (STATUS IN ('Y','N')),
CONSTRAINT NN_DEPTMAS_EUSER		CHECK (EUSER IS NOT NULL)
);

--DROP TABLE HIS_DEPTMAS;
CREATE TABLE HIS_DEPTMAS
(
ORDDEPT			NUMBER(5),
DEPTCD  		NUMBER(5),
DEPTNM  		VARCHAR2(100),
--ADDRESS    		VARCHAR2(100),
STATUS  		VARCHAR2(1),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);


--INTIME  NUMBER(4,2),
--OUTTIME NUMBER(4,2),
--TOTMIN  NUMBER(3)

--MODULE DONE
--DROP TABLE DESGMAS;
CREATE TABLE DESGMAS
(
ORDDESG		NUMBER(5),
DESGCD 		NUMBER(5),
DESGNM 		VARCHAR2(50),
STATUS		VARCHAR2(1),
EUSER		VARCHAR2(20),
ETERMINAL	VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
CUSER		VARCHAR2(20),
CONSTRAINT PK_DESGMAS_DESGCD	PRIMARY KEY (DESGCD),
CONSTRAINT UQ_DESGMAS_DESGNM 	UNIQUE (DESGNM),
CONSTRAINT NN_DESGMAS_DESGNM	CHECK (DESGNM IS NOT NULL),
CONSTRAINT CK_DESGMAS_STATUS 	CHECK (STATUS IN ('Y','N')),
CONSTRAINT NN_DESGMAS_STATUS	CHECK (STATUS IS NOT NULL),
CONSTRAINT NN_DESGMAS_EUSER		CHECK (EUSER IS NOT NULL)
);

--DROP TABLE HIS_DESGMAS;
CREATE TABLE HIS_DESGMAS
(
ORDDESG			NUMBER(5),
DESGCD 			NUMBER(5),
DESGNM 			VARCHAR2(50),
STATUS			VARCHAR2(1),
EUSER			VARCHAR2(20),
ETERMINAL		VARCHAR2(20),
EDATE			DATE,
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);


/*  
--DROP TABBLE ABSENT_RATIO;
CREATE TABLE ABSENT_RATIO
(
COMPCD       NUMBER(5),
SALMONTH     VARCHAR2(6),
MANPOWER     NUMBER(8),
MONTHLY_WD   NUMBER(8,2),
TOTAL_WD     NUMBER(8,2),
TOTAL_PD     NUMBER(8,2),
TOTAL_ABSENT NUMBER(8,2),
RATIO        NUMBER(5,2),
CONSTRAINT PK_ABSENTRATIO PRIMARY KEY (COMPCD, SALMONTH)
);

DROP TABBLE ABSENT_EMPLOYEE;
CREATE TABLE ABSENT_EMPLOYEE
(
COMPCD     	NUMBER(5),
EMPCD      	VARCHAR2(8),
EDATE      	DATE,
AB_DAY     	NUMBER(5,2),
NARRATION  	VARCHAR2(50),
IS_CONFIRM 	VARCHAR2(1),
CONFIRM_BY 	VARCHAR2(20)
CONSTRAINT PK_ABSENT_EMP PRIMARY KEY (COMPCD, EMPCD, EDATE),
CONSTRAINT CK_ABSENT_EMP_AB_DAY CHECK (AB_DAY IS NOT NULL)
);
*/



/*
create table BANK_SHEET_PRINT_DETAIL
(
CURDATE    DATE,
CURTIME    VARCHAR2(5),
TERMINAL   VARCHAR2(20),
IP_ADD     VARCHAR2(50),
SHEET_FLAG VARCHAR2(20),
BANKNM     VARCHAR2(20),
SALMONTH   VARCHAR2(10),
SALTYPE    VARCHAR2(10)
);


*/

/*
CREATE TABLE DATES
(
COMPCD  	NUMBER(5),
DEPTCD  	NUMBER(5),
FLOORCD 	NUMBER(5),
CURDATE 	DATE
);
*/


--DROP TABLE EMPMAS;
CREATE TABLE EMPMAS
(
COMPCD         	NUMBER(5),
EMPCD          	VARCHAR2(8),
EMPNO			NUMBER(6),
FIRSTNM			VARCHAR2(30),
MIDDLENM		VARCHAR2(30),
LASTNM			VARCHAR2(30),
EMPNM          	VARCHAR2(100),
SHORTNM        	VARCHAR2(30),
FATHERNM       	VARCHAR2(60),	--HUSBAND NAME IN CASE OF MARRIED
MOTHERNM       	VARCHAR2(60),
--HUSBANDNM      	VARCHAR2(50),	
DESGCD			NUMBER(5),
DEPTCD			NUMBER(5),
FLOORCD			NUMBER(5),
ADD1          	VARCHAR2(40),
ADD2          	VARCHAR2(40),
ADD3          	VARCHAR2(40),
CITY          	VARCHAR2(20),
STATE			VARCHAR2(20),
PADD1          	VARCHAR2(40),
PADD2          	VARCHAR2(40),
PADD3          	VARCHAR2(40),
PCITY          	VARCHAR2(20),
PSTATE			VARCHAR2(20),
GENDER			VARCHAR2(10),		--MALE/FEMALE/OTHER
BIRTHDATE      	DATE,
JOINDATE       	DATE,
RESIGNDATE      DATE,
NOTARYDATE     	DATE,
CARDISSDATE    	DATE,
REALSAL         NUMBER(10),			--TOTSAL
BASIC          	NUMBER(8),
DA             	NUMBER(8),
HRA            	NUMBER(8),
EA              NUMBER(8),    
TA              NUMBER(8),
MEDIREMB        NUMBER(8),
--INCENTIVE     NUMBER(8),
--ADVANCE		NUMBER(8),
--TOTPAY        NUMBER(10,2),
--TDS           NUMBER(8),
PT_FLAG			VARCHAR2(1),		--Y/N
PF_FLAG         VARCHAR2(1),		--Y/N
PF_JOINDATE		DATE,				
PFNO           	VARCHAR2(30),		--PF ACNO
UANNO			VARCHAR2(30),		--UNIVERSAL PF ACCOUNTANT NO.
ESIC_FLAG       VARCHAR2(1),		--Y/N
ESIC_BRANCH		VARCHAR2(30),
ESICNO         	VARCHAR2(30),
ACNO       		VARCHAR2(20),		--BANK ACCOUNT NO.
BANKNM          VARCHAR2(50),		--BANK NAME
BANK_BRANCH     VARCHAR2(20),		--BANK BRANCH
PF_PCT         	NUMBER(7,2),		--?
ESIC_PCT       	NUMBER(7,2),
PANNO          	VARCHAR2(10),
AADHARNO        VARCHAR2(12),
VOTERID       	VARCHAR2(20),
PASSPORTNO		VARCHAR2(20),
BLOOD_GROUP     VARCHAR2(3),		--VALID VALUES - A+/A-/B+/B-/O+/O-/AB+/AB-/NA
QUALIFICATION 	VARCHAR2(20),		--
NO_OF_CHILD     NUMBER(2), 
--WEIGHT			NUMBER(3),
--HEIGHT			VARCHAR2(6),
PHY_DISABILITY 	VARCHAR2(1),		--Y/N
PHY_CERTY_DATE	DATE,
HANDICAPPED		VARCHAR2(1),		--FOR PT/PF CALCUALTION
SENIOR_CITIZEN	VARCHAR2(1),		--FOR PT/PF CALCULATION
MARITAL_STATUS 	VARCHAR2(10),		--MARRIED/UNMARRIED/WIDOWED/DIVORCED
REFERENCE_BY	VARCHAR2(40),
REMARK         	VARCHAR2(50),
STATUS         	VARCHAR2(1),		
EUSER     		VARCHAR2(12),
EDATE			DATE DEFAULT SYSDATE,
ETERMINAL		VARCHAR2(20),
CUSER     		VARCHAR2(12),
CONSTRAINT PK_EMPMAS_COMPCD		PRIMARY KEY (COMPCD, EMPCD),
CONSTRAINT UQ_EMPMAS_EMPNO		UNIQUE (COMPCD,EMPNO),
CONSTRAINT FK_EMPMAS_COMPCD 	FOREIGN KEY (COMPCD) REFERENCES COMPMAS (COMPCD),
CONSTRAINT FK_EMPMAS_DEPTCD		FOREIGN KEY (DEPTCD) REFERENCES DEPTMAS (DEPTCD),
CONSTRAINT FK_EMPMAS_DESGCD		FOREIGN KEY (DESGCD) REFERENCES DESGMAS (DESGCD),
CONSTRAINT FK_EMPMAS_FLOORCD	FOREIGN KEY (FLOORCD) REFERENCES FLOORMAS (FLOORCD),
CONSTRAINT NN_EMPMAS_EMPNO		CHECK (EMPNO IS NOT NULL),
CONSTRAINT NN_EMPMAS_EMPNM		CHECK (EMPNM IS NOT NULL),
CONSTRAINT NN_EMPMAS_SHORTNM	CHECK (SHORTNM IS NOT NULL),
CONSTRAINT CK_EMPMAS_REALSAL	CHECK (REALSAL > 0),
CONSTRAINT CK_EMPMAS_PFFLAG		CHECK (PF_FLAG IN ('Y','N')),
CONSTRAINT CK_EMPMAS_ESICFLAG	CHECK (ESIC_FLAG IN ('Y','N')),
CONSTRAINT CK_EMPMAS_MARITAL	CHECK (MARITAL_STATUS IN ('MARRIED','UNMARRIED','WIDOWED','DIVORCED')),
CONSTRAINT NN_EMPMAS_JOINDATE 	CHECK (JOINDATE IS NOT NULL),
CONSTRAINT NN_EMPMAS_EUSER		CHECK (EUSER IS NOT NULL)
--CONSTRAINT CK_EMPMAS_EDATE	CHECK (EDATE IS NOT NULL)
);

COMMENT ON COLUMN EMPMAS.FATHERNM IS 'Husband Name if female employee is married';
COMMENT ON COLUMN EMPMAS.GENDER IS 'valid values are - MALE/FEMALE/OTHER';
COMMENT ON COLUMN EMPMAS.MARITAL_STATUS IS 'valid values are - MARRIED,UNMARRIED,WIDOWED,DIVORCED' ;
COMMENT ON COLUMN EMPMAS.ACNO IS 'Bank Account No.';
COMMENT ON COLUMN EMPMAS.UANNO IS 'Universal PF Account No.';
COMMENT ON COLUMN EMPMAS.HANDICAPPED IS 'valid values Y/N - for PT/PF calculation';
COMMENT ON COLUMN EMPMAS.SENIOR_CITIZEN IS 'valid values Y/N - for PT/PF calculation';
COMMENT ON COLUMN EMPMAS.EMPNM IS 'concatination of first , middle and last name';

--23/11/2024
ALTER TABLE EMPMAS ADD (CONTACTNO1	VARCHAR2(30), CONTACTNO2 VARCHAR2(30));
ALTER TABLE EMPMAS ADD CONSTRAINT NN_EMPMAS_PFFLAG CHECK (PF_FLAG IS NOT NULL);
ALTER TABLE EMPMAS ADD CONSTRAINT NN_EMPMAS_ESICFLAG CHECK (ESIC_FLAG IS NOT NULL);
ALTER TABLE EMPMAS ADD (STUDYING_CHILD	NUMBER(1));
--03/12/2024
ALTER TABLE EMPMAS ADD CONSTRAINT CK_EMPMAS_STATUS CHECK (STATUS IN ('Y','N'));
ALTER TABLE EMPMAS ADD CONSTRAINT NN_EMPMAS_STATUS CHECK (STATUS IS NOT NULL);



--26/11/2024 
--DROPT TABLE HIS_EMPMAS;
CREATE TABLE HIS_EMPMAS
(
COMPCD         NUMBER(5),
EMPCD          VARCHAR2(8),
EMPNO          NUMBER(6),
FIRSTNM        VARCHAR2(30),
MIDDLENM       VARCHAR2(30),
LASTNM         VARCHAR2(30),
EMPNM          VARCHAR2(100),
SHORTNM        VARCHAR2(30),
FATHERNM       VARCHAR2(60),
MOTHERNM       VARCHAR2(60),
HUSBANDNM      VARCHAR2(50),
DESGCD         NUMBER(5),
DEPTCD         NUMBER(5),
FLOORCD        NUMBER(5),
ADD1           VARCHAR2(40),
ADD2           VARCHAR2(40),
ADD3           VARCHAR2(40),
CITY           VARCHAR2(20),
STATE          VARCHAR2(20),
PADD1          VARCHAR2(40),
PADD2          VARCHAR2(40),
PADD3          VARCHAR2(40),
PCITY          VARCHAR2(20),
PSTATE         VARCHAR2(20),
GENDER         VARCHAR2(10),
BIRTHDATE      DATE,
JOINDATE       DATE,
RESIGNDATE     DATE,
NOTARYDATE     DATE,
CARDISSDATE    DATE,
REALSAL        NUMBER(10),
BASIC          NUMBER(8),
DA             NUMBER(8),
HRA            NUMBER(8),
EA             NUMBER(8),
TA             NUMBER(8),
MEDIREMB       NUMBER(8),
PT_FLAG        VARCHAR2(1),
PF_FLAG        VARCHAR2(1),
PF_JOINDATE    DATE,
PFNO           VARCHAR2(30),
UANNO          VARCHAR2(30),
ESIC_FLAG      VARCHAR2(1),
ESIC_BRANCH    VARCHAR2(30),
ESICNO         VARCHAR2(30),
ACNO           VARCHAR2(20),
BANKNM         VARCHAR2(50),
BANK_BRANCH    VARCHAR2(20),
PF_PCT         NUMBER(7,2),
ESIC_PCT       NUMBER(7,2),
PANNO          VARCHAR2(10),
AADHARNO       VARCHAR2(12),
VOTERID        VARCHAR2(20),
PASSPORTNO     VARCHAR2(20),
BLOOD_GROUP    VARCHAR2(3),
QUALIFICATION  VARCHAR2(20),
NO_OF_CHILD    NUMBER(2),
PHY_DISABILITY VARCHAR2(1),
PHY_CERTY_DATE DATE,
HANDICAPPED    VARCHAR2(1),
SENIOR_CITIZEN VARCHAR2(1),
MARITAL_STATUS VARCHAR2(10),
REFERENCE_BY   VARCHAR2(40),
REMARK         VARCHAR2(50),
STATUS         VARCHAR2(1),
EUSER          VARCHAR2(12),
EDATE          DATE ,
ETERMINAL      VARCHAR2(20),
CUSER          VARCHAR2(12),
CONTACTNO1     VARCHAR2(30),
CONTACTNO2     VARCHAR2(30),
STUDYING_CHILD NUMBER(1),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),	--UPDATE/DELETE USER
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)

);


--DROP TABLE EMP_JOINDET;
CREATE TABLE EMP_JOINDET
(
COMPCD     		NUMBER(5),
FYCD       		NUMBER(5),
EMPCD      		VARCHAR2(8),
SRNO       		NUMBER(5),
JOINDATE   		DATE,
RESIGNDATE  	DATE,
NOTARYDATE 		DATE,
EUSER			VARCHAR2(20),
ETERMINAL		VARCHAR2(20),
EDATE			DATE DEFAULT SYSDATE,
CUSER			VARCHAR2(20),
CONSTRAINT PK_EMPJOINDET 			PRIMARY KEY (COMPCD, EMPCD, FYCD, SRNO),
CONSTRAINT FK_EMPJOINDET_EMPCD 		FOREIGN KEY (COMPCD, EMPCD)  REFERENCES EMPMAS (COMPCD, EMPCD),
CONSTRAINT CK_EMPJOINDET_JOINDATE	CHECK (JOINDATE IS NOT NULL),
CONSTRAINT CK_EMPJOINDET_EUSER		CHECK (EUSER IS NOT NULL)
);

--DROP TABLE EMP_FAMILYDET;
CREATE TABLE EMP_FAMILYDET
(
COMPCD    		NUMBER(3),
EMPCD     		VARCHAR2(8),
SRNO      		NUMBER(3),
MEMBERNM  		VARCHAR2(50),
RELATION  		VARCHAR2(15),	--FATHER/MOTHER/SON/DAUGHTER
BIRTHDATE 		DATE,
AGE				NUMBER(3),
AADHARNO		VARCHAR2(12),
STUDYING		VARCHAR2(1),	--VALUES Y/N -  (IN CASE OF SON AND DAUGHTER)
NOMINEE   		VARCHAR2(1),	--Y/N
EUSER			VARCHAR2(20),
EDATE			DATE DEFAULT SYSDATE,
ETERMINAL		VARCHAR2(20),
CUSER			VARCHAR2(20),
CONSTRAINT PK_EMP_FAMILY_COMPSRNO 	PRIMARY KEY (COMPCD, EMPCD, SRNO),
CONSTRAINT FK_EMP_FAMILY_COMPEMPCD 	FOREIGN KEY (COMPCD, EMPCD)  REFERENCES EMPMAS (COMPCD, EMPCD),
CONSTRAINT NN_EMP_FAMILY_BIRTHDATE  CHECK (BIRTHDATE IS NOT NULL),
CONSTRAINT NN_EMP_FAMILY_MEMBERNM  	CHECK (MEMBERNM IS NOT NULL),
CONSTRAINT NN_EMP_FAMILY_RELATION  	CHECK (RELATION IS NOT NULL),
CONSTRAINT NN_EMP_FAMILY_AGE		CHECK (AGE IS NOT NULL),
CONSTRAINT CK_EMP_FAMILY_NOMINEE	CHECK (NOMINEE IN ('Y','N')),
CONSTRAINT CK_EMP_FAMILY_STUDYING	CHECK (STUDYING IN ('Y','N')),
CONSTRAINT NN_EMP_FAMILY_NOMINEE	CHECK (NOMINEE IS NOT NULL),
CONSTRAINT NN_EMP_FAMILY_STUDYING	CHECK (STUDYING IS NOT NULL),
CONSTRAINT NN_EMP_FAMILY_EUSER 		CHECK (EUSER IS NOT NULL)
);


--DROP TABLE HIS_EMP_FAMILYDET;
CREATE TABLE HIS_EMP_FAMILYDET
(
COMPCD    		NUMBER(5),
EMPCD     		VARCHAR2(6),
SRNO      		NUMBER(5),
MEMBERNM  		VARCHAR2(50),
RELATION  		VARCHAR2(15),
BIRTHDATE 		DATE,
AGE				NUMBER(3),
STUDY			VARCHAR2(1),	--VALUES Y/N -  (IN CASE OF SON AND DAUGHTER)
NOMINEE   		VARCHAR2(1),	--Y/N
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);
  
  
--DROP TABLE FORM16;
CREATE TABLE FORM16
(
COMPCD                  NUMBER(5),
FYCD                    NUMBER(5),
FYEAR                   NUMBER(4),
TYEAR                   NUMBER(4),
EMPCD                   VARCHAR2(8),
DEPTCD                  NUMBER(5),
FLOORCD                 NUMBER(5),
FDATE                   DATE,
TDATE                   DATE,
GROSS_SALARY            NUMBER(10,2),
GROSS_PERQUISITE        NUMBER(10,2),
GROSS_PROFITS           NUMBER(10,2),
GROSS_TOTAL             NUMBER(10,2),
LESS_ALLOW              NUMBER(10,2),
BALANCE                 NUMBER(10,2),
STDDED_STANDARD         NUMBER(10,2),
STDDED_PT               NUMBER(10,2),
STDDED_ENTER            NUMBER(10,2),
STDDED_TOTAL            NUMBER(10,2),
INC_CHARGE              NUMBER(10,2),
INC_ADD                 NUMBER(10,2),
INC_LESS                NUMBER(10,2),
INC_TOTAL               NUMBER(10,2),
DED_80C                 NUMBER(10,2),
DED_80CCC               NUMBER(10,2),
DED_80CCD               NUMBER(10,2),
DED_80D                 NUMBER(10,2),
DED_TOTAL               NUMBER(10,2),
TAXABLE_INCOME          NUMBER(10,2),
TAXABLE_INCOME_RND      NUMBER(10,2),	--ROUNDUP
TAX_ON_INCOME           NUMBER(10,2),
RELIEF_89               NUMBER(10,2),
TAX_PAYABLE             NUMBER(10,2),
SURCHARGE_PCT           NUMBER(10,2),
SURCHARGE_AMT           NUMBER(10,2),
CESS_PCT                NUMBER(10,2),
CESS_AMT                NUMBER(10,2),
TOTAL_TAX               NUMBER(10,2),
TAX_191_1               NUMBER(10,2),
TAX_192_1A              NUMBER(10,2),
TAX_PAY_REFUND          NUMBER(10,2),
TOTAL_DEDUCTIBLE        NUMBER(10,2),
DONATION_80G            NUMBER(10,2),
EA                      NUMBER(10,2),
TA                      NUMBER(10,2),
OSOURCE                 VARCHAR2(1),
HRA_PER_OF_BASIC_DA_AMT NUMBER(10,2),
HRA_RECEIPT             NUMBER(10,2),
HRA_EXEMPT              NUMBER(10,2),
HRA                     NUMBER(10,2),
RELIEF_87A              NUMBER(10,2),
EUSER					VARCHAR2(20),
ETERMINAL				VARCHAR2(20),
EDATE					DATE DEFAULT SYSDATE,
CUSER					VARCHAR2(20),
CONSTRAINT PK_FORM16_COMPEMPFYR PRIMARY KEY (COMPCD, EMPCD, FYEAR),
CONSTRAINT FK_FORM16_COMPEMP 	FOREIGN KEY (COMPCD, EMPCD)  REFERENCES EMPMAS (COMPCD, EMPCD),
CONSTRAINT NN_FORM16_EDATE		CHECK (EDATE IS NOT NULL)
);


--DROP TABLE FORM16_DEDUCTIONS;
CREATE TABLE FORM16_DEDUCTIONS
(
COMPCD      NUMBER(5),
FYCD        NUMBER(5),
SRNO        NUMBER(4),
FYEAR       NUMBER(4),
EMPCD       VARCHAR2(8),
FDATE       DATE,
TDATE       DATE,
DESCRIPTION VARCHAR2(40),
AMOUNT      NUMBER(12,2),
EUSER		VARCHAR2(20),
ETERMINAL	VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
CUSER		VARCHAR2(20),
CONSTRAINT PK_DED_COEMPFYRSR PRIMARY KEY (COMPCD, EMPCD, FYEAR, SRNO),
CONSTRAINT FK_DED_COEMPFYR FOREIGN KEY (COMPCD, EMPCD, FYEAR) REFERENCES FORM16 (COMPCD, EMPCD, FYEAR)
);


--DUE
DROP TABLE FORM16_BSRCODE;
CREATE TABLE FORM16_BSRCODE
(
MONTH        VARCHAR2(7),
BSRCODE      VARCHAR2(15),
CHALLANID    VARCHAR2(10),
DEPOSIT_DATE DATE
);

--DROP TABLE FORM16_INCOME;
CREATE TABLE FORM16_INCOME
(
COMPCD  	NUMBER(5),
EMPCD   	VARCHAR2(8),
FYEAR     	NUMBER(4),
ISOURCE 	VARCHAR2(30),
IAMOUNT 	NUMBER(10,2),
EUSER		VARCHAR2(20),
ETERMINAL	VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
CUSER		VARCHAR2(20),
CONSTRAINT PK_FORM16_INC_COEMPFYRISRC 	PRIMARY KEY (COMPCD, EMPCD, FYEAR, ISOURCE),
CONSTRAINT FK_FORM16_INC 				FOREIGN KEY (COMPCD, EMPCD, FYEAR)  REFERENCES FORM16 (COMPCD, EMPCD, FYEAR),
CONSTRAINT NN_FORM16_INC_EUSER			CHECK (EUSER IS NOT NULL)
);

--DROP TABLE FORM16_TDS;
CREATE TABLE FORM16_TDS
(
COMPCD    	NUMBER(5),
EMPCD     	VARCHAR2(8),
FYEAR       NUMBER(4),
TDS       	NUMBER(10,2),
PAYDATE   	DATE,
BANKNM    	VARCHAR2(20),
SALMONTH  	VARCHAR2(6),
TRF       	VARCHAR2(1),
DEPDATE   	DATE,
CHEQUENO  	VARCHAR2(20),
BSRCODE   	VARCHAR2(20),
TYPE      	VARCHAR2(1),
ORGTDS    	NUMBER(10,2),
SURCHARGE 	NUMBER(10,2),
CESS      	NUMBER(10,2),
CHALLANID 	VARCHAR2(15),
EUSER		VARCHAR2(20),
ETERMINAL	VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
CUSER		VARCHAR2(20),
CONSTRAINT FK_FORM16TDS_COEMPFYR FOREIGN KEY (COMPCD, EMPCD, FYEAR)  REFERENCES FORM16 (COMPCD, EMPCD, FYEAR),
CONSTRAINT NN_FORM16TDS_EUSER	CHECK (EUSER IS NOT NULL)
);

--DROP TABLE FORM16_TRANSFER;
CREATE TABLE FORM16_TRANSFER
(
COMPCD          NUMBER(5),
EMPCD           VARCHAR2(8),
FYEAR           NUMBER(4),
TYEAR           NUMBER(4),
GROSS_SALARY    NUMBER(10,2),
STDDED_STANDARD NUMBER(10,2),
STDDED_PT       NUMBER(10,2),
STDDED_ENTER    NUMBER(10,2),
EA              NUMBER(10,2),
TA              NUMBER(10,2),
HRA             NUMBER(10,2),
EUSER           VARCHAR2(20),
ETERMINAL       VARCHAR2(20),
EDATE           DATE DEFAULT SYSDATE,
CUSER           VARCHAR2(20),
CONSTRAINT PK_FORM16_TRF 		PRIMARY KEY (COMPCD, EMPCD, FYEAR),
CONSTRAINT FK_FORM16_TRF 		FOREIGN KEY (COMPCD, EMPCD, FYEAR) REFERENCES FORM16 (COMPCD, EMPCD, FYEAR),
CONSTRAINT NN_FORM16_TRF_EUSER	CHECK (EUSER IS NOT NULL)
);


--DROP TABLE HRA_RECEIPT;
CREATE TABLE HRA_RECEIPT
(
COMPCD 		NUMBER(5),
EMPCD  		VARCHAR2(6),
RMONTH  	VARCHAR2(6),		--RENT MONTH
HRA    		NUMBER(8,2),
EUSER		VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
ETERMINAL	VARCHAR2(20),
CUSER		VARCHAR2(20),
CONSTRAINT PK_HRARCPT_COEMPMON 	PRIMARY KEY (COMPCD, EMPCD, RMONTH),
CONSTRAINT FK_HRARCPT_COEMPCD 	FOREIGN KEY (COMPCD, EMPCD)  REFERENCES EMPMAS (COMPCD, EMPCD),
CONSTRAINT NN_HRARCPT_EUSER		CHECK (EUSER IS NOT NULL)
);



/*
--DROP TABLE DEPT_TRANSFER;
CREATE TABLE DEPT_TRANSFER
(
COMPCD  NUMBER(5),
EMPCD   VARCHAR2(8),
CURDATE DATE NOT NULL,
FDEPT   NUMBER(5),
TDEPT   NUMBER(5),
FFLOOR  NUMBER(5),
TFLOOR  NUMBER(5),
REMARKS VARCHAR2(60),
FYCD    NUMBER(5),
CONSTRAINT PK_DEPT_TRANSFER_COMPEMPDT PRIMARY KEY (COMPCD, EMPCD, CURDATE),
CONSTRAINT FK_DEPT_TRANSFER_COEMP FOREIGN KEY (COMPCD, EMPCD)  REFERENCES EMPMAS (COMPCD, EMPCD),
CONSTRAINT FK_DEPT_TRANSFER_FDEPT FOREIGN KEY (FDEPT)  REFERENCES DEPTMAS (DEPTCD),
CONSTRAINT FK_DEPT_TRANSFER_TDEPT FOREIGN KEY (TDEPT)  REFERENCES DEPTMAS (DEPTCD)
);
*/

/*
CREATE TABLE EMPMAS_FY
(
COMPCD     NUMBER(5),
FYCD       NUMBER(5),
EMPCD      VARCHAR2(8),
DEPTCD     NUMBER(5),
SUBDEPTCD  NUMBER(5),
FLOOR      NUMBER(5),
DESG       NUMBER(5),
ADD1       VARCHAR2(40),
ADD2       VARCHAR2(40),
ADD3       VARCHAR2(40),
CITY       VARCHAR2(40),
NOOFCHILD  NUMBER(2),
STUDYCHILD NUMBER(2),
TRFFROM    VARCHAR2(60),
TRFFRDATE  DATE,
CFPD       NUMBER(6),
TRFTO      VARCHAR2(60),
TRFTODATE  DATE,
CONTACT1   VARCHAR2(20),
CONTACT2   VARCHAR2(20),
PINCODE    VARCHAR2(6)
);
ALTER TABLE EMPMAS_FY  ADD CONSTRAINT EMPMAS_FY PRIMARY KEY (COMPCD, EMPCD, FYCD);
ALTER TABLE EMPMAS_FY  ADD CONSTRAINT FK_EMPMAS_FY_EMPCD FOREIGN KEY (COMPCD, EMPCD)  REFERENCES EMPMAS (COMPCD, EMPCD);
CREATE INDEX IDX_EMPMAS_FY_EMPDEPTCD ON EMPMAS_FY (COMPCD, EMPCD, SUBDEPTCD, DEPTCD);
*/




CREATE TABLE LOCKSALTRAN
(
COMPCD    	NUMBER(5),
LOCKMONTH 	VARCHAR2(6),
EUSER		VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
ETERMINAL	VARCHAR2(20),
CUSER		VARCHAR2(20)
);

/*
CREATE TABLE HOLIDAYS
(
SRNO     	NUMBER(5),
COMPCD   	NUMBER(5),
CURDATE  	DATE,
OCCASION 	VARCHAR2(50),
EUSER		VARCHAR2(20),
ETERMINAL	VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
CUSER		VARCHAR2(20),
CONSTRAINT PK_HOLIDAYS_SRDATE PRIMARY KEY (SRNO, CURDATE)
);

*/


/*
CREATE TABLE OCCASIONALDAY
(
COMPCD  NUMBER(5),
CURDATE DATE,
INTIME  NUMBER(4,2),
OUTTIME NUMBER(4,2),
TOTMIN  NUMBER(3),
DAYSTS  VARCHAR2(1)
);
*/

--MODULE DONE
DROP TABLE PT_SLAB;
CREATE TABLE PT_SLAB
(
COMPCD		NUMBER(5),
SRNO		NUMBER(5),
FREALSAL	NUMBER(10),
TREALSAL	NUMBER(10),
PT			NUMBER(5),
EUSER		VARCHAR2(20),
EDATE		DATE DEFAULT SYSDATE,
ETERMINAL	VARCHAR2(20),
CUSER		VARCHAR2(20),
CONSTRAINT PK_PTSLAB		PRIMARY KEY (COMPCD,FREALSAL,TREALSAL,PT),
CONSTRAINT NN_PTSLAB_SRNO 	CHECK (SRNO IS NOT NULL),
CONSTRAINT NN_PTSLAB_EUSER 	CHECK (EUSER IS NOT NULL)
);


DROP TABLE HIS_PT_SLAB;
CREATE TABLE HIS_PT_SLAB
(
COMPCD			NUMBER(5),
SRNO		    NUMBER(5),
FREALSAL		NUMBER(10),
TREALSAL		NUMBER(10),
PT				NUMBER(10),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(20),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);

--MODULE DONE
DROP TABLE IT_SLAB;
CREATE TABLE IT_SLAB
(
SRNO			NUMBER(5),
CATEGORY 		VARCHAR2(20), -- MALE/FEMALE/SENIOR CITIZEN
FINCOME			NUMBER(10),
TINCOME			NUMBER(10),  
IT_PCT			NUMBER(5,2),
EUSER			VARCHAR2(20),
EDATE			DATE DEFAULT SYSDATE,
ETERMINAL		VARCHAR2(20),
CUSER			VARCHAR2(20),
CONSTRAINT PK_ITSLAB		PRIMARY KEY (CATEGORY,FINCOME,TINCOME),
CONSTRAINT NN_ITSLAB_ITPER  CHECK (IT_PCT IS NOT NULL),
CONSTRAINT NN_ITSLAB_SRNO   CHECK (SRNO IS NOT NULL),
CONSTRAINT NN_ITSLAB_EUSER  CHECK (EUSER IS NOT NULL)
--CONSTRAINT NN_ITSLAB_CATEG  CHECK (CATEGORY IS NOT NULL),
);

DROP TABLE HIS_IT_SLAB;
CREATE TABLE HIS_IT_SLAB
(
SRNO			NUMBER(5),
CATEGORY 		VARCHAR2(20), -- MALE/FEMALE/SENIOR CITIZEN
FINCOME			NUMBER(10),
TINCOME			NUMBER(10),  
IT_PCT			NUMBER(5,2),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);

--MODULE DONE
--tdate must be lastdate of month
--DROP TABLE TA_SLAB;
CREATE TABLE TA_SLAB
(
COMPCD		NUMBER(5),
SRNO		NUMBER(5),
FMONTH		NUMBER(6),	--FORMAT YYYYMM
TMONTH		NUMBER(6),
TA			NUMBER(5,2),
EUSER		VARCHAR2(20),
EDATE		DATE,
ETERMINAL	VARCHAR2(20),
CUSER		VARCHAR2(20),
CONSTRAINT PK_TASLAB		PRIMARY KEY (COMPCD,FMONTH,TMONTH,TA),
CONSTRAINT NN_TASLAB_SRNO 	CHECK (SRNO IS NOT NULL),
CONSTRAINT NN_TASLAB_TA 	CHECK (TA IS NOT NULL),
CONSTRAINT NN_TASLAB_EUSER 	CHECK (EUSER IS NOT NULL)
);

--DROP TABLE HIS_TA_SLAB;
CREATE TABLE HIS_TA_SLAB 
(
COMPCD			NUMBER(5),
SRNO			NUMBER(5),
FMONTH			NUMBER(6),
TMONTH			NUMBER(6),
TA				NUMBER(5,2),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
DML_FLAG		VARCHAR2(20),
DML_USER		VARCHAR2(30),
DML_DATE		DATE,
DML_TERMINAL  	VARCHAR2(20) 	
);

/*
--PENDING - DONT MAKE MODULE FOR NOW
DROP TABLE ESIC_SLAB;
CREATE TABLE ESIC_SLAB 
(
COMPCD			NUMBER(5),
FYCD			NUMBER(5),
FMONTH			VARCHAR2(6),
TMONTH			VARCHAR2(6),
EUSER			VARCHAR2(20),
ETERMINAL		VARCHAR2(20),
EDATE			DATE DEFAULT SYSDATE,
CUSER			VARCHAR2(20),
CONSTRAINT PK_ESIC_SLAB	PRIMARY KEY (COMPCD,FYCD,FMONTH,TMONTH),
CONSTRAINT NN_ESIC_SLAB_EUSER CHECK (EUSER IS NOT NULL)
);


DROP TABLE HIS_ESIC_SLAB;
CREATE TABLE HIS_ESIC_SLAB 
(
COMPCD			NUMBER(5),
FYCD			NUMBER(5),
FMONTH			VARCHAR2(6),
TMONTH			VARCHAR2(6),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20), 	
);
*/

--PENDING-- ??
CREATE TABLE QUARTERLY_TDS
(
COMPCD    NUMBER(5),
SRNO      VARCHAR2(15),
RECEIPTNO VARCHAR2(50),
FMONTH    VARCHAR2(15),
TMONTH    VARCHAR2(15),
FYCD      NUMBER(5)
);

--MODULE DONE
DROP TABLE SALARY_SLAB;
CREATE TABLE SALARY_SLAB
(
COMPCD			NUMBER(5),
SRNO			NUMBER(5),
REALSAL			NUMBER(8),
BASIC			NUMBER(8),
DA				NUMBER(8),
HRA				NUMBER(8),
EA				NUMBER(8),
TA				NUMBER(8),
MEDIREMB		NUMBER(8),
EUSER			VARCHAR2(20),
EDATE			DATE DEFAULT SYSDATE, 
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
CONSTRAINT PK_SALSLAB 			PRIMARY KEY (COMPCD,SRNO),
CONSTRAINT NN_SALSLAB_REALSAL 	CHECK (REALSAL IS NOT NULL),
CONSTRAINT NN_SALSLAB_BASIC 	CHECK (BASIC IS NOT NULL),
CONSTRAINT NN_SALSLAB_DA 		CHECK (DA IS NOT NULL),
CONSTRAINT NN_SALSLAB_EUSER 	CHECK (EUSER IS NOT NULL)
);


--DROP TABLE HIS_SALARY_SLAB;
CREATE TABLE HIS_SALARY_SLAB
(
COMPCD			NUMBER(5),
SRNO			NUMBER(5),
REALSAL			NUMBER(8),
BASIC			NUMBER(8),
DA				NUMBER(8),
HRA				NUMBER(8),
EA				NUMBER(8),
TA				NUMBER(8),
MEDIREMB		NUMBER(8),
EUSER			VARCHAR2(20),
EDATE			DATE,
ETERMINAL		VARCHAR2(20),
EIP				VARCHAR2(30),
CUSER			VARCHAR2(20),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),	--UPDATE/DELETE USER
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);


--COPY TRIGGER FIRST.
--DROP TABLE SALTRAN;
CREATE TABLE SALTRAN
(
COMPCD         	NUMBER(5),
FYCD           	NUMBER(5),
DEPTCD         	NUMBER(5),
FLOORCD        	NUMBER(5),
EMPCD          	VARCHAR2(6),
EMP_TYPE		VARCHAR2(1),	-- FIX/VARIABLE
SALTYPE        	VARCHAR2(1),  	-- 'S' FOR SALARY, 'B' FOR BONUS , 'L' FOR LEAVE
SALMONTH		VARCHAR2(6),  	-- MONTH FORMAT - 201707,201706
PAYDATE        	DATE,      		-- PAYMENT DATE OF BANK (CHEQUE DATE)  
PAYMODE        	VARCHAR2(10),  	-- CASH/CHEQUE
WD             	NUMBER(5),     	-- WORKING DAYS - (EX - 26)
PD             	NUMBER(7,2),   	-- PRESENT DAYS (WD KARTA ATTEN_PD VADHI JAY TO PD = WD THAI JAY)
TD             	NUMBER(5),    	-- TOTAL DAYS OF MONTH  (EX AUG-31)
LPD            	NUMBER(5),		-- LEAVE PRESENT DAYS (FOR SALTYPE = 'L')
REALSAL		 	NUMBER(10,2), 	-- ACTUAL SALARY (CASHSAL + CHQSAL) - 57000 (EX: OF PK)
BASIC          	NUMBER(10,2), 	-- ACTUAL BASIC
DA             	NUMBER(10,2), 	-- ACTUAL DA
HRA            	NUMBER(10,2), 	-- ACTUAL HRA
EA			 	NUMBER(10,2), 	-- ACTUAL EDUCATION ALLOWANCE
TA             	NUMBER(10,2), 	-- ACTUAL TRANSPORT ALLOWANCE
MEDIREMB		NUMBER(10,2),	-- MEDICAL REIMBURSEMENT
BASICS         	NUMBER(10,2), 	-- BASIC + DA
ALLOWANCES	 	NUMBER(10,2),   -- TOTAL OF (HRA + EA + TA + MEDIREMB)
PERDAYSAL		NUMBER(10,2) ,  -- CHEQUE SAL/WD
EBASIC         	NUMBER(10,2), 	-- EARNING COLUMNS
EDA            	NUMBER(10,2),	--
EHRA           	NUMBER(10,2),	--
EEA			 	NUMBER(10,2),	--
ETA            	NUMBER(10,2),  	--
EMEDIREMB		NUMBER(10,2),	-- 
EBASICS		 	NUMBER(10,2),	-- EBASIC + EDA
EALLOWANCES	 	NUMBER(10,2),   -- EHRA + EEA + ETA + EMEDIREMB
PFGROSS        	NUMBER(10,2),   -- GROSS ELIGIBLE SALARY FOR PF (18000) 
ESICGROSS      	NUMBER(10,2),   -- GROSS SALARY FOR ESIC
COMPEPF_PCT    	NUMBER(6,2),	-- PROVIDENT FUND
COMPEPS_PCT    	NUMBER(6,2),	-- PENSION SCHEME
COMPPF_PCT     	NUMBER(6,2),	-- TOTAL OF (COMPEPF_PCT + COMPEPS_PCT)
COMPEPF       	NUMBER(10,2),	-- AMT OF EPF%
COMPEPS       	NUMBER(10,2),	-- AMT OF EPS% - (PENSION SCHEME)
COMPPF        	NUMBER(10,2),	-- TOTAL OF (COMPEPF + COMPFPF)
COMPESIC_PCT	NUMBER(10,2),	-- COMP ESIC%
COMPESIC		NUMBER(10,2),	-- COMP ESIC AMT
EMPEPF_PCT     	NUMBER(6,2),	-- EMP PF%  
EMPEPS_PCT     	NUMBER(6,2),	-- EMP PENSION SCHEME%
EMPPF_PCT      	NUMBER(6,2),    -- TOTAL OF (EMPEPF_PCT + EMPEPS_PCT)
EMPEPF         	NUMBER(10,2),	-- EPF - AMT OF EPF%
EMPEPS         	NUMBER(10,2),	-- EPS - AMT OF EPS%
EMPPF          	NUMBER(10,2), 	-- (EMPEPF + EMPEPS) - TOTAL DEDUCTED PF AMT
EMPESIC_PCT    	NUMBER(6,2),    -- EMP ESIC%
EMPESIC        	NUMBER(10,2),   -- EMP ESIC AMT (-)
PT             	NUMBER(10,2),   -- PROFESSIONAL TAX (-)
EMPLWF			NUMBER(5),		-- LABOUR WELFARE FUND (-)
COMPLWF	     	NUMBER(5),		-- COMPANY LABOUR WELFARE FUND
TOTDEDUCT	 	NUMBER(10,2), 	-- TOTAL OF DEDUCTION  (PF + ESIC + PT + EWF)
ADVANCE        	NUMBER(10,2),   -- UPAD(-)
INCENTIVE		NUMBER(10,2),	-- PERFORMANCE INCENTIVE - NOT USED IN CHQ SALARY, ONLY FOR CASHSAL
PENALTY			NUMBER(10,2),	-- 
NETPAY		 	NUMBER(10,2), 	-- GROSSSAL - ( TOTDEDUCT + ADVANCE + PENALTY )
ACNO         	VARCHAR2(20),	-- EMPLOYEE BANK ACNO
BANKNM         	VARCHAR2(30),	-- EMPLOYEE BANK NAME
TDS         	NUMBER(10,2),
SURCHARGE      	NUMBER(10,2),
CESS           	NUMBER(10,2),
TOTTDS         	NUMBER(10,2),	-- TOTAL OF TDS + SURCHARGE + CESS 
GROSSSAL       	NUMBER(10,2),	-- TOTAL EARNINGS
BONUSQUALAMT   	NUMBER(10,2),
BONUSEBASICS   	NUMBER(10,2),
LEAVEPERDAYWGS 	NUMBER(10,2),
EUSER          	VARCHAR2(30),
ETERMINAL		VARCHAR2(20),
EDATE			DATE DEFAULT SYSDATE,
CUSER          	VARCHAR2(30),
CONSTRAINT PK_SALTRAN_COEMPCD 	PRIMARY KEY (COMPCD, EMPCD, SALTYPE, SALMONTH),
CONSTRAINT FK_SALTRAN_COEMPCD 	FOREIGN KEY (COMPCD, EMPCD)  REFERENCES EMPMAS (COMPCD, EMPCD),
CONSTRAINT NN_SALTRAN_EMP_TYPE	CHECK (EMP_TYPE IS NOT NULL),
CONSTRAINT NN_SALTRAN_BASIC		CHECK (BASIC IS NOT NULL),
CONSTRAINT CK_SALTRAN_SALTYPE	CHECK (SALTYPE IN ('S','L','B')),
CONSTRAINT NN_SALTRAN_PAYDATE	CHECK (PAYDATE IS NOT NULL),
CONSTRAINT NN_SALTRAN_TD		CHECK (TD IS NOT NULL),
CONSTRAINT NN_SALTRAN_PD		CHECK (PD IS NOT NULL),
CONSTRAINT NN_SALTRAN_WD		CHECK (WD IS NOT NULL),
CONSTRAINT NN_SALTRAN_ACNO		CHECK (ACNO IS NOT NULL),
CONSTRAINT NN_SALTRAN_REALSAL	CHECK (REALSAL > 0),
CONSTRAINT NN_SALTRAN_EUSER		CHECK (EUSER IS NOT NULL)
);



COMMENT ON COLUMN SALTRAN.EMP_TYPE IS 'FIX/VARIABLE';
COMMENT ON COLUMN SALTRAN.SALTYPE IS 'S FOR SALARY, B FOR BONUS, L FOR LEAVE';
COMMENT ON COLUMN SALTRAN.SALMONTH IS 'MONTH FORMAT - 201707,201706';
COMMENT ON COLUMN SALTRAN.PAYDATE IS 'PAYMENT DATE OF BANK (CHEQUE DATE)';
COMMENT ON COLUMN SALTRAN.PAYMODE IS 'CASH/CHEQUE';
COMMENT ON COLUMN SALTRAN.WD IS 'WORKING DAYS - (EX - 26)';
COMMENT ON COLUMN SALTRAN.PD IS 'PRESENT DAYS (WD KARTA ATTEN_PD VADHI JAY TO PD = WD THAI JAY)';
COMMENT ON COLUMN SALTRAN.TD IS 'TOTAL DAYS OF MONTH  (EX AUG-31)';
COMMENT ON COLUMN SALTRAN.LPD IS 'LEAVE PRESENT DAYS (FOR SALTYPE = L)';
COMMENT ON COLUMN SALTRAN.REALSAL IS 'ACTUAL SALARY (CASHSAL + CHQSAL) - 57000 (EX: OF PK)';
COMMENT ON COLUMN SALTRAN.BASIC IS 'ACTUAL BASIC';
COMMENT ON COLUMN SALTRAN.DA IS  'ACTUAL DA';
COMMENT ON COLUMN SALTRAN.HRA IS 'ACTUAL HRA';
COMMENT ON COLUMN SALTRAN.EA IS 'ACTUAL EDUCATION ALLOWANCE';
COMMENT ON COLUMN SALTRAN.TA IS  'ACTUAL TRANSPORT ALLOWANCE';
COMMENT ON COLUMN SALTRAN.MEDIREMB IS 'MEDICAL REIMBURSEMENT';
COMMENT ON COLUMN SALTRAN.BASICS IS 'BASIC + DA';
COMMENT ON COLUMN SALTRAN.ALLOWANCES IS 'TOTAL OF (HRA + EA + TA + MEDIREMB)';
COMMENT ON COLUMN SALTRAN.PERDAYSAL IS 'CHEQUE SAL/WD';
COMMENT ON COLUMN SALTRAN.EBASIC IS 'EARNING COLUMNS';
COMMENT ON COLUMN SALTRAN.EBASICS IS 'EBASIC + EDA';
COMMENT ON COLUMN SALTRAN.EALLOWANCES IS 'EHRA + EEA + ETA + EMEDIREMB';
COMMENT ON COLUMN SALTRAN.PFGROSS IS 'GROSS ELIGIBLE SALARY FOR PF (18000)';
COMMENT ON COLUMN SALTRAN.ESICGROSS IS 'GROSS SALARY FOR ESIC';
COMMENT ON COLUMN SALTRAN.COMPEPF_PCT IS 'PROVIDENT FUND';
COMMENT ON COLUMN SALTRAN.COMPEPS_PCT IS 'PENSION SCHEME';
COMMENT ON COLUMN SALTRAN.COMPPF_PCT IS 'TOTAL OF (COMPEPF_PCT + COMPEPS_PCT)';
COMMENT ON COLUMN SALTRAN.COMPEPF IS 'AMT OF EPF%';
COMMENT ON COLUMN SALTRAN.COMPEPS IS 'AMT OF EPS% - (PENSION SCHEME)';
COMMENT ON COLUMN SALTRAN.COMPPF IS 'TOTAL OF (COMPEPF + COMPFPF)';
COMMENT ON COLUMN SALTRAN.COMPESIC_PCT IS 'COMP ESIC%';
COMMENT ON COLUMN SALTRAN.COMPESIC IS 'COMP ESIC AMT';
COMMENT ON COLUMN SALTRAN.EMPEPF_PCT IS 'EMP PF%';
COMMENT ON COLUMN SALTRAN.EMPEPS_PCT IS 'EMP PENSION SCHEME%';
COMMENT ON COLUMN SALTRAN.EMPPF_PCT IS 'TOTAL OF (EMPEPF_PCT + EMPEPS_PCT)';
COMMENT ON COLUMN SALTRAN.EMPEPF IS 'EPF - AMT OF EPF%';
COMMENT ON COLUMN SALTRAN.EMPEPS IS 'EPS - AMT OF EPS%';
COMMENT ON COLUMN SALTRAN.EMPPF IS '(EMPEPF + EMPEPS) - TOTAL DEDUCTED PF AMT';
COMMENT ON COLUMN SALTRAN.EMPESIC_PCT IS 'EMP ESIC%';
COMMENT ON COLUMN SALTRAN.EMPESIC IS 'EMP ESIC AMT (-)';
COMMENT ON COLUMN SALTRAN.PT IS 'PROFESSIONAL TAX (-)';
COMMENT ON COLUMN SALTRAN.EMPLWF IS 'LABOUR WELFARE FUND (-)';
COMMENT ON COLUMN SALTRAN.COMPLWF IS 'COMPANY LABOUR WELFARE FUND';
COMMENT ON COLUMN SALTRAN.TOTDEDUCT	IS 'TOTAL OF DEDUCTION  (PF + ESIC + PT + EWF)';
COMMENT ON COLUMN SALTRAN.ADVANCE IS 'UPAD(-)';
COMMENT ON COLUMN SALTRAN.INCENTIVE	IS 'PERFORMANCE INCENTIVE - NOT USED IN CHQ SALARY, ONLY FOR CASHSAL';
--COMMENT ON COLUMN SALTRAN.PENALTY IS '';
COMMENT ON COLUMN SALTRAN.NETPAY IS	'GROSSSAL - ( TOTDEDUCT + ADVANCE + PENALTY )';
COMMENT ON COLUMN SALTRAN.ACNO IS  'EMPLOYEE BANK ACNO';
COMMENT ON COLUMN SALTRAN.BANKNM IS 'EMPLOYEE BANK NAME';
--COMMENT ON COLUMN SALTRAN.TDS IS '';
--COMMENT ON COLUMN SALTRAN.SURCHARGE IS '';
--COMMENT ON COLUMN SALTRAN.CESS IS '';
COMMENT ON COLUMN SALTRAN.TOTTDS IS 'TOTAL OF TDS + SURCHARGE + CESS ';
COMMENT ON COLUMN SALTRAN.GROSSSAL IS 'TOTAL OF ACTUAL EARNINGS';


--LOANEMI		NUMBER(10,2),
--INCENTIVE	    NUMBER(10,2),   -- (+) (ONLY IN CASH)  -- NO NEED FOR NOW JUST COLUMN ADDED
--PENALTY		NUMBER(10,2),   -- (-)
--OTMIN			NUMBER(10),
--OTPER			NUMBER(7,2),	-- ADD IN CASH SALARY
--OTAMT	 		NUMBER(10,2),	-- O
--PERDAYSAL		NUMBER(10,2) ,  -- CHEQUE SAL/WD
--CASHSAL		NUMBER(10,2),	-- CASH SALARY (40000)
--CHQSAL		NUMBER(10,2), 	-- CHEQUE SALARY (17000)
--ECASHSAL	    NUMBER(10,2),	-- EARNINGS OF CASH SAL 
--ECHQSAL		NUMBER(10,2),	-- TOTAL OF EARNINGS COLUMN ( EBASIC + EDA + EHRA + EEA + ETA + EMEDIREMB)
--NETCASHSAL  	NUMBER(10,2), 	-- CASH APAY TE SALARY ((ECASHSAL+INCENTIVE+OTHER_INCENTIVE) - (ADVANCE+PENALTY+OTHER_PENALTY+LOAN_EMI))
--NETCHQSAL	   	NUMBER(10,2), 	-- PLUS MINUS THAINE NET SALARY  (CHQ SALARY)  ( ECHQSAL - TOTDEDUCT)
--OTHER_INCENTIVE	NUMBER(10,2),	-- (+) VALUE COME FROM OTHER PENALTY ENTRY MODULE (BUT FROM FAULT CATCH EMP )
--OTHER_PENALTY	NUMBER(10,2),	-- (-)	VALUE COME FROM OTHER PENALTY ENTRY MODULE
--LOANID		NUMBER(5),

--CALCDATE      DATE,
--STATUS        VARCHAR2(5),
--AUTO_PD       VARCHAR2(1)
--ATTEN_PD		NUMBER(7,2), 	-- ORIGINAL PRESENT DAYS FROM ATTEN (TOTAL PRESENT DAYS USING PUCHING SYSTEM)
--IMPORTSAL		NUMBER(10,2),	-- VARIABLE SALARY

--NOTES:
--ADVANCE,PENALTY AND INCENTIVE  CASH SALARY PAR JA CALCUALTION THASE (NE CUT THASE) 
--------------------------

--28/11/2024
--DROP TABLE HIS_SALTRAN;
CREATE TABLE HIS_SALTRAN
(
COMPCD         	NUMBER(5),
FYCD           	NUMBER(5),
DEPTCD         	NUMBER(5),
FLOORCD        	NUMBER(5),
EMPCD          	VARCHAR2(6),
EMP_TYPE		VARCHAR2(1),
SALTYPE        	VARCHAR2(1),
SALMONTH		VARCHAR2(6),
PAYDATE        	DATE,
PAYMODE        	VARCHAR2(10),
WD             	NUMBER(5),
PD             	NUMBER(7,2),
TD             	NUMBER(5),
LPD            	NUMBER(5),
REALSAL		 	NUMBER(10,2), 
CASHSAL		 	NUMBER(10,2),
CHQSAL		 	NUMBER(10,2),
PERDAYSAL		NUMBER(10,2),
BASIC          	NUMBER(10,2),
DA             	NUMBER(10,2),
HRA            	NUMBER(10,2),
EA			 	NUMBER(10,2),
TA             	NUMBER(10,2),
MEDIREMB		NUMBER(10,2),
BASICS         	NUMBER(10,2),
ALLOWANCES	 	NUMBER(10,2),
EBASIC         	NUMBER(10,2),
EDA            	NUMBER(10,2),
EHRA           	NUMBER(10,2),
EEA			 	NUMBER(10,2),
ETA            	NUMBER(10,2),
EMEDIREMB		NUMBER(10,2),
EBASICS		 	NUMBER(10,2),
EALLOWANCES	 	NUMBER(10,2),
PFGROSS        	NUMBER(10,2),
ESICGROSS      	NUMBER(10,2),
COMPEPF_PCT    	NUMBER(6,2),
COMPEPS_PCT    	NUMBER(6,2),
COMPPF_PCT     	NUMBER(6,2),
COMPEPF       	NUMBER(10,2),
COMPEPS       	NUMBER(10,2),
COMPPF        	NUMBER(10,2),
COMPESIC_PCT	NUMBER(10,2),
COMPESIC		NUMBER(10,2),
EMPEPF_PCT     	NUMBER(6,2),
EMPEPS_PCT     	NUMBER(6,2),
EMPPF_PCT      	NUMBER(6,2),
EMPEPF         	NUMBER(10,2),
EMPEPS         	NUMBER(10,2),
EMPPF          	NUMBER(10,2),
EMPESIC_PCT    	NUMBER(6,2),
EMPESIC        	NUMBER(10,2),
PT             	NUMBER(10,2),
EMPLWF			NUMBER(5),
COMPLWF	     	NUMBER(5),
TOTDEDUCT	 	NUMBER(10,2),
ADVANCE        	NUMBER(10,2),
INCENTIVE		NUMBER(10,2),
PENALTY			NUMBER(10,2),
NETPAY		 	NUMBER(10,2),
ACNO         	VARCHAR2(20),
BANKNM         	VARCHAR2(20),
ORGTDS         	NUMBER(10,2),
TDS         	NUMBER(10,2),
SURCHARGE      	NUMBER(10,2),
CESS           	NUMBER(10,2),
TOTTDS         	NUMBER(10,2),
GROSSSAL       	NUMBER(10,2),
BONUSQUALAMT   	NUMBER(10,2),
BONUSEBASICS   	NUMBER(10,2),
LEAVEPERDAYWGS 	NUMBER(10,2),
EUSER          	VARCHAR2(30),
ETERMINAL		VARCHAR2(20),
EDATE			DATE,
CUSER          	VARCHAR2(30),
DML_FLAG	  	VARCHAR2(20),
DML_USER	  	VARCHAR2(30),	--UPDATE/DELETE USER
DML_DATE	  	DATE,
DML_TERMINAL  	VARCHAR2(20)
);


/*
--DROP TABLE SALTYPE;
CREATE TABLE SALTYPE
(
SALDESC 	VARCHAR2(20),
SALTYPE 	VARCHAR2(1),
REGULAR 	VARCHAR2(1)
);
*/




CREATE TABLE LASTDATE
(
LDATE 	DATE,
IMAGE 	NUMBER(2),
CONSTRAINT NN_LASTDATE_IMAGE CHECK (IMAGE IS NOT NULL),
CONSTRAINT NN_LASTDATE_LDATE CHECK (LDATE IS NOT NULL)
);


--MODULE NOT CREATED - NOT NEEDED, 
CREATE TABLE MACHINE_IP
(
MACHINENM 	VARCHAR2(20),
MACHINEIP 	VARCHAR2(15),
PROG_USER 	VARCHAR2(30),
REMARK    	VARCHAR2(50)
);


--03/12/2024 --REMOVED ALL IP COLUMNS - NO CONFUSION NOW
ALTER TABLE EMP_FAMILYDET DROP COLUMN EIP;
ALTER TABLE HIS_EMP_FAMILYDET DROP COLUMN EIP;
ALTER TABLE HIS_SALARY_SLAB DROP COLUMN EIP;
ALTER TABLE SALARY_SLAB DROP COLUMN EIP;
ALTER TABLE HIS_IT_SLAB DROP COLUMN DML_IP;
ALTER TABLE HIS_FLOORMAS DROP COLUMN DML_IP;
ALTER TABLE HIS_EMP_FAMILYDET DROP COLUMN DML_IP;
ALTER TABLE HIS_EMPMAS DROP COLUMN DML_IP;
ALTER TABLE HIS_DESGMAS DROP COLUMN DML_IP;
ALTER TABLE HIS_DEPTMAS DROP COLUMN DML_IP;
ALTER TABLE HIS_COMPMAS DROP COLUMN DML_IP;

